{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getPresentedNotificationsAsync;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _core = require(\"@unimodules/core\");\n\nvar _NotificationPresenterModule = _interopRequireDefault(require(\"./NotificationPresenterModule\"));\n\nfunction getPresentedNotificationsAsync() {\n  return _regenerator.default.async(function getPresentedNotificationsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (_NotificationPresenterModule.default.getPresentedNotificationsAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('Notifications', 'getPresentedNotificationsAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regenerator.default.awrap(_NotificationPresenterModule.default.getPresentedNotificationsAsync());\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/getPresentedNotificationsAsync.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAGe,SAAe,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cACR,qCAAsB,8BADd;AAAA;AAAA;AAAA;;AAAA,gBAEL,IAAI,yBAAJ,CAAwB,eAAxB,EAAyC,gCAAzC,CAFK;;AAAA;AAAA;AAAA,4CAKA,qCAAsB,8BAAtB,EALA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport NotificationPresenter from './NotificationPresenterModule';\nimport { Notification } from './Notifications.types';\n\nexport default async function getPresentedNotificationsAsync(): Promise<Notification[]> {\n  if (!NotificationPresenter.getPresentedNotificationsAsync) {\n    throw new UnavailabilityError('Notifications', 'getPresentedNotificationsAsync');\n  }\n\n  return await NotificationPresenter.getPresentedNotificationsAsync();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}