{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.addPushTokenListener = addPushTokenListener;\nexports.removePushTokenSubscription = removePushTokenSubscription;\nexports.removeAllPushTokenListeners = removeAllPushTokenListeners;\n\nvar _core = require(\"@unimodules/core\");\n\nvar _PushTokenManager = _interopRequireDefault(require(\"./PushTokenManager\"));\n\nvar tokenEmitter = new _core.EventEmitter(_PushTokenManager.default);\nvar newTokenEventName = 'onDevicePushToken';\n\nfunction addPushTokenListener(listener) {\n  var wrappingListener = function wrappingListener(_ref) {\n    var devicePushToken = _ref.devicePushToken;\n    return listener({\n      data: devicePushToken,\n      type: _core.Platform.OS\n    });\n  };\n\n  return tokenEmitter.addListener(newTokenEventName, wrappingListener);\n}\n\nfunction removePushTokenSubscription(subscription) {\n  tokenEmitter.removeSubscription(subscription);\n}\n\nfunction removeAllPushTokenListeners() {\n  tokenEmitter.removeAllListeners(newTokenEventName);\n}","map":{"version":3,"sources":["../src/TokenEmitter.ts"],"names":[],"mappings":";;;;;;;;;AAAA;;AAEA;;AAMA,IAAM,YAAY,GAAG,IAAI,kBAAJ,CAAiB,yBAAjB,CAArB;AACA,IAAM,iBAAiB,GAAG,mBAA1B;;AAEM,SAAU,oBAAV,CAA+B,QAA/B,EAA0D;AAC9D,MAAM,gBAAgB,GAAG,SAAnB,gBAAmB;AAAA,QAAG,eAAH,QAAG,eAAH;AAAA,WAEvB,QAAQ,CAAC;AAAE,MAAA,IAAI,EAAE,eAAR;AAAyB,MAAA,IAAI,EAAE,eAAS;AAAxC,KAAD,CAFe;AAAA,GAAzB;;AAGA,SAAO,YAAY,CAAC,WAAb,CAAyB,iBAAzB,EAA4C,gBAA5C,CAAP;AACD;;AAEK,SAAU,2BAAV,CAAsC,YAAtC,EAAgE;AACpE,EAAA,YAAY,CAAC,kBAAb,CAAgC,YAAhC;AACD;;AAEK,SAAU,2BAAV,GAAqC;AACzC,EAAA,YAAY,CAAC,kBAAb,CAAgC,iBAAhC;AACD","sourcesContent":["import { EventEmitter, Subscription, Platform } from '@unimodules/core';\n\nimport PushTokenManager from './PushTokenManager';\nimport { DevicePushToken } from './Tokens.types';\n\nexport type PushTokenListener = (token: DevicePushToken) => void;\n\n// Web uses SyntheticEventEmitter\nconst tokenEmitter = new EventEmitter(PushTokenManager);\nconst newTokenEventName = 'onDevicePushToken';\n\nexport function addPushTokenListener(listener: PushTokenListener): Subscription {\n  const wrappingListener = ({ devicePushToken }) =>\n    // @ts-ignore: TS can't decide what Platform.OS is.\n    listener({ data: devicePushToken, type: Platform.OS });\n  return tokenEmitter.addListener(newTokenEventName, wrappingListener);\n}\n\nexport function removePushTokenSubscription(subscription: Subscription) {\n  tokenEmitter.removeSubscription(subscription);\n}\n\nexport function removeAllPushTokenListeners() {\n  tokenEmitter.removeAllListeners(newTokenEventName);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}