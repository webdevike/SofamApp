{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.uploadImage = uploadImage;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction uploadImage(file, signedRequest) {\n  var getFileType;\n  return _regenerator.default.async(function uploadImage$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          getFileType = function _getFileType() {\n            if (file.uri.includes('jpg')) {\n              return 'image/jpeg';\n            } else return 'video/mp4';\n          };\n\n          _context.prev = 1;\n          _context.next = 4;\n          return _regenerator.default.awrap(fetch(signedRequest, {\n            method: \"PUT\",\n            body: file,\n            headers: {\n              'Content-type': getFileType()\n            }\n          }));\n\n        case 4:\n          _context.next = 9;\n          break;\n\n        case 6:\n          _context.prev = 6;\n          _context.t0 = _context[\"catch\"](1);\n          console.log(\"uploadImage -> error\", _context.t0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[1, 6]], Promise);\n}","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/utils/uploadImage.ts"],"names":["uploadImage","file","signedRequest","getFileType","uri","includes","fetch","method","body","headers","console","log"],"mappings":";;;;;;;;;AAIO,SAAeA,WAAf,CAA2BC,IAA3B,EAAuCC,aAAvC;AAAA,MACIC,WADJ;AAAA;AAAA;AAAA;AAAA;AACIA,UAAAA,WADJ,2BACkB;AACrB,gBAAIF,IAAI,CAACG,GAAL,CAASC,QAAT,CAAkB,KAAlB,CAAJ,EAA8B;AAC5B,qBAAO,YAAP;AACD,aAFD,MAEO,OAAO,WAAP;AACR,WALI;;AAAA;AAAA;AAAA,4CAOGC,KAAK,CAACJ,aAAD,EAAgB;AACzBK,YAAAA,MAAM,EAAE,KADiB;AAEzBC,YAAAA,IAAI,EAAEP,IAFmB;AAGzBQ,YAAAA,OAAO,EAAE;AACP,8BAAgBN,WAAW;AADpB;AAHgB,WAAhB,CAPR;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAeHO,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["interface File {\n  uri: string;\n}\n\nexport async function uploadImage(file: File, signedRequest: string) {\n  function getFileType() {\n    if (file.uri.includes('jpg')) {\n      return 'image/jpeg'\n    } else return 'video/mp4'\n  }\n  try {\n    await fetch(signedRequest, {\n      method: \"PUT\",\n      body: file,\n      headers: {\n        'Content-type': getFileType()\n      }\n    })\n  } catch (error) {\n    console.log(\"uploadImage -> error\", error)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}