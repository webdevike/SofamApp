{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isAudioEnabled = isAudioEnabled;\nexports.throwIfAudioIsDisabled = throwIfAudioIsDisabled;\nexports.setIsEnabledAsync = setIsEnabledAsync;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _ExponentAV = _interopRequireDefault(require(\"../ExponentAV\"));\n\nvar _enabled = true;\n\nfunction isAudioEnabled() {\n  return _enabled;\n}\n\nfunction throwIfAudioIsDisabled() {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\nfunction setIsEnabledAsync(value) {\n  return _regenerator.default.async(function setIsEnabledAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _enabled = value;\n          _context.next = 3;\n          return _regenerator.default.awrap(_ExponentAV.default.setAudioIsEnabled(value));\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../../src/Audio/AudioAvailability.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA;;AAEA,IAAI,QAAQ,GAAG,IAAf;;AAEM,SAAU,cAAV,GAAwB;AAC5B,SAAO,QAAP;AACD;;AAEK,SAAU,sBAAV,GAAgC;AACpC,MAAI,CAAC,QAAL,EAAe;AACb,UAAM,IAAI,KAAJ,CAAU,yDAAV,CAAN;AACD;AACF;;AAEM,SAAe,iBAAf,CAAiC,KAAjC;AAAA;AAAA;AAAA;AAAA;AACL,UAAA,QAAQ,GAAG,KAAX;AADK;AAAA,4CAEC,oBAAW,iBAAX,CAA6B,KAA7B,CAFD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}