{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _interface = require(\"../interface\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _calendar = _interopRequireDefault(require(\"../calendar\"));\n\nvar _item = _interopRequireDefault(require(\"./item\"));\n\nvar _index = _interopRequireDefault(require(\"../calendar/header/index\"));\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/calendar-list/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar _Dimensions$get = _reactNative.Dimensions.get('window'),\n    width = _Dimensions$get.width;\n\nvar CalendarList = function (_Component) {\n  (0, _inherits2.default)(CalendarList, _Component);\n\n  var _super = _createSuper(CalendarList);\n\n  function CalendarList(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, CalendarList);\n    _this = _super.call(this, props);\n\n    _this.addMonth = function (count) {\n      _this.updateMonth(_this.state.currentMonth.clone().addMonths(count, true));\n    };\n\n    _this.style = (0, _style.default)(props.theme);\n    _this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n    var rows = [];\n    var texts = [];\n    var date = (0, _interface.parseDate)(props.current) || (0, _xdate.default)();\n\n    for (var i = 0; i <= _this.props.pastScrollRange + _this.props.futureScrollRange; i++) {\n      var rangeDate = date.clone().addMonths(i - _this.props.pastScrollRange, true);\n      var rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n\n      if (_this.props.pastScrollRange - 1 <= i && i <= _this.props.pastScrollRange + 1 || !_this.props.pastScrollRange && i <= _this.props.pastScrollRange + 2) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n\n    _this.state = {\n      rows: rows,\n      texts: texts,\n      openDate: date,\n      currentMonth: (0, _interface.parseDate)(props.current)\n    };\n    _this.onViewableItemsChangedBound = _this.onViewableItemsChanged.bind((0, _assertThisInitialized2.default)(_this));\n    _this.renderCalendarBound = _this.renderCalendar.bind((0, _assertThisInitialized2.default)(_this));\n    _this.getItemLayout = _this.getItemLayout.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onLayout = _this.onLayout.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(CalendarList, [{\n    key: \"onLayout\",\n    value: function onLayout(event) {\n      if (this.props.onLayout) {\n        this.props.onLayout(event);\n      }\n    }\n  }, {\n    key: \"scrollToDay\",\n    value: function scrollToDay(d, offset, animated) {\n      var day = (0, _interface.parseDate)(d);\n      var diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n      var size = this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight;\n      var scrollAmount = size * this.props.pastScrollRange + diffMonths * size + (offset || 0);\n\n      if (!this.props.horizontal) {\n        var week = 0;\n\n        var days = _dateutils.default.page(day, this.props.firstDay);\n\n        for (var i = 0; i < days.length; i++) {\n          week = Math.floor(i / 7);\n\n          if (_dateutils.default.sameDate(days[i], day)) {\n            scrollAmount += 46 * week;\n            break;\n          }\n        }\n      }\n\n      this.listView.scrollToOffset({\n        offset: scrollAmount,\n        animated: animated\n      });\n    }\n  }, {\n    key: \"scrollToMonth\",\n    value: function scrollToMonth(m) {\n      var month = (0, _interface.parseDate)(m);\n      var scrollTo = month || this.state.openDate;\n      var diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n      var size = this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight;\n      var scrollAmount = size * this.props.pastScrollRange + diffMonths * size;\n      this.listView.scrollToOffset({\n        offset: scrollAmount,\n        animated: false\n      });\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(props) {\n      var current = (0, _interface.parseDate)(this.props.current);\n      var nextCurrent = (0, _interface.parseDate)(props.current);\n\n      if (nextCurrent && current && nextCurrent.getTime() !== current.getTime()) {\n        this.scrollToMonth(nextCurrent);\n      }\n\n      var rowclone = this.state.rows;\n      var newrows = [];\n\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = this.state.texts[i];\n\n        if (rowclone[i].getTime) {\n          val = rowclone[i].clone();\n          val.propbump = rowclone[i].propbump ? rowclone[i].propbump + 1 : 1;\n        }\n\n        newrows.push(val);\n      }\n\n      this.setState({\n        rows: newrows\n      });\n    }\n  }, {\n    key: \"onViewableItemsChanged\",\n    value: function onViewableItemsChanged(_ref) {\n      var viewableItems = _ref.viewableItems;\n\n      function rowIsCloseToViewable(index, distance) {\n        for (var i = 0; i < viewableItems.length; i++) {\n          if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n            return true;\n          }\n        }\n\n        return false;\n      }\n\n      var rowclone = this.state.rows;\n      var newrows = [];\n      var visibleMonths = [];\n\n      for (var i = 0; i < rowclone.length; i++) {\n        var val = rowclone[i];\n        var rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n\n        if (rowShouldBeRendered && !rowclone[i].getTime) {\n          val = this.state.openDate.clone().addMonths(i - this.props.pastScrollRange, true);\n        } else if (!rowShouldBeRendered) {\n          val = this.state.texts[i];\n        }\n\n        newrows.push(val);\n\n        if (rowIsCloseToViewable(i, 0)) {\n          visibleMonths.push((0, _interface.xdateToData)(val));\n        }\n      }\n\n      if (this.props.onVisibleMonthsChange) {\n        this.props.onVisibleMonthsChange(visibleMonths);\n      }\n\n      this.setState({\n        rows: newrows,\n        currentMonth: (0, _interface.parseDate)(visibleMonths[0])\n      });\n    }\n  }, {\n    key: \"renderCalendar\",\n    value: function renderCalendar(_ref2) {\n      var item = _ref2.item;\n      return _react.default.createElement(_item.default, (0, _extends2.default)({\n        testID: this.props.testID + \"_\" + item,\n        scrollToMonth: this.scrollToMonth.bind(this),\n        item: item,\n        calendarHeight: this.props.calendarHeight,\n        calendarWidth: this.props.horizontal ? this.props.calendarWidth : undefined\n      }, this.props, {\n        style: this.props.calendarStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 7\n        }\n      }));\n    }\n  }, {\n    key: \"getItemLayout\",\n    value: function getItemLayout(data, index) {\n      return {\n        length: this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight,\n        offset: (this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight) * index,\n        index: index\n      };\n    }\n  }, {\n    key: \"getMonthIndex\",\n    value: function getMonthIndex(month) {\n      var diffMonths = this.state.openDate.diffMonths(month) + this.props.pastScrollRange;\n      return diffMonths;\n    }\n  }, {\n    key: \"updateMonth\",\n    value: function updateMonth(day, doNotTriggerListeners) {\n      var _this2 = this;\n\n      if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n        return;\n      }\n\n      this.setState({\n        currentMonth: day.clone()\n      }, function () {\n        _this2.scrollToMonth(_this2.state.currentMonth);\n\n        if (!doNotTriggerListeners) {\n          var currMont = _this2.state.currentMonth.clone();\n\n          if (_this2.props.onMonthChange) {\n            _this2.props.onMonthChange((0, _interface.xdateToData)(currMont));\n          }\n\n          if (_this2.props.onVisibleMonthsChange) {\n            _this2.props.onVisibleMonthsChange([(0, _interface.xdateToData)(currMont)]);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"renderStaticHeader\",\n    value: function renderStaticHeader() {\n      var _this$props = this.props,\n          staticHeader = _this$props.staticHeader,\n          horizontal = _this$props.horizontal;\n      var useStaticHeader = staticHeader && horizontal;\n\n      if (useStaticHeader) {\n        var indicator;\n\n        if (this.props.showIndicator) {\n          indicator = _react.default.createElement(_reactNative.ActivityIndicator, {\n            color: this.props.theme && this.props.theme.indicatorColor,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }\n          });\n        }\n\n        return _react.default.createElement(_index.default, {\n          style: [this.style.staticHeader, this.props.headerStyle],\n          month: this.state.currentMonth,\n          addMonth: this.addMonth,\n          showIndicator: indicator,\n          theme: this.props.theme,\n          hideArrows: this.props.hideArrows,\n          firstDay: this.props.firstDay,\n          renderArrow: this.props.renderArrow,\n          monthFormat: this.props.monthFormat,\n          hideDayNames: this.props.hideDayNames,\n          weekNumbers: this.props.showWeekNumbers,\n          onPressArrowLeft: this.props.onPressArrowLeft,\n          onPressArrowRight: this.props.onPressArrowRight,\n          testID: _testIDs.STATIC_HEADER,\n          accessibilityElementsHidden: true,\n          importantForAccessibility: 'no-hide-descendants',\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return _react.default.createElement(_reactNative.View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.FlatList, {\n        testID: this.props.testID,\n        onLayout: this.onLayout,\n        ref: function ref(c) {\n          return _this3.listView = c;\n        },\n        style: [this.style.container, this.props.style],\n        initialListSize: this.props.pastScrollRange + this.props.futureScrollRange + 1,\n        data: this.state.rows,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        pageSize: 1,\n        horizontal: this.props.horizontal,\n        pagingEnabled: this.props.pagingEnabled,\n        onViewableItemsChanged: this.onViewableItemsChangedBound,\n        viewabilityConfig: this.viewabilityConfig,\n        renderItem: this.renderCalendarBound,\n        showsVerticalScrollIndicator: this.props.showScrollIndicator,\n        showsHorizontalScrollIndicator: this.props.showScrollIndicator,\n        scrollEnabled: this.props.scrollEnabled,\n        keyExtractor: this.props.keyExtractor,\n        initialScrollIndex: this.state.openDate ? this.getMonthIndex(this.state.openDate) : false,\n        getItemLayout: this.getItemLayout,\n        scrollsToTop: this.props.scrollsToTop,\n        onEndReachedThreshold: this.props.onEndReachedThreshold,\n        onEndReached: this.props.onEndReached,\n        keyboardShouldPersistTaps: this.props.keyboardShouldPersistTaps,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 9\n        }\n      }), this.renderStaticHeader());\n    }\n  }]);\n  return CalendarList;\n}(_react.Component);\n\nCalendarList.displayName = 'CalendarList';\nCalendarList.propTypes = _objectSpread(_objectSpread({}, _calendar.default.propTypes), {}, {\n  pastScrollRange: _propTypes.default.number,\n  futureScrollRange: _propTypes.default.number,\n  scrollEnabled: _propTypes.default.bool,\n  showScrollIndicator: _propTypes.default.bool,\n  scrollsToTop: _propTypes.default.bool,\n  pagingEnabled: _propTypes.default.bool,\n  horizontal: _propTypes.default.bool,\n  calendarWidth: _propTypes.default.number,\n  calendarHeight: _propTypes.default.number,\n  keyboardShouldPersistTaps: _propTypes.default.oneOf(['never', 'always', 'handled']),\n  calendarStyle: _propTypes.default.oneOfType([_propTypes.default.object, _propTypes.default.number, _propTypes.default.array]),\n  staticHeader: _propTypes.default.bool,\n  keyExtractor: _propTypes.default.func\n});\nCalendarList.defaultProps = {\n  horizontal: false,\n  calendarWidth: width,\n  calendarHeight: 360,\n  pastScrollRange: 50,\n  futureScrollRange: 50,\n  showScrollIndicator: false,\n  scrollEnabled: true,\n  scrollsToTop: false,\n  removeClippedSubviews: _reactNative.Platform.OS === 'android',\n  keyExtractor: function keyExtractor(item, index) {\n    return String(index);\n  }\n};\nvar _default = CalendarList;\nexports.default = _default;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/calendar-list/index.js"],"names":["Dimensions","get","width","CalendarList","props","addMonth","count","updateMonth","state","currentMonth","clone","addMonths","style","theme","viewabilityConfig","itemVisiblePercentThreshold","rows","texts","date","current","i","pastScrollRange","futureScrollRange","rangeDate","rangeDateStr","toString","push","openDate","onViewableItemsChangedBound","onViewableItemsChanged","bind","renderCalendarBound","renderCalendar","getItemLayout","onLayout","event","d","offset","animated","day","diffMonths","Math","round","setDate","size","horizontal","calendarWidth","calendarHeight","scrollAmount","week","days","dateutils","page","firstDay","length","floor","sameDate","listView","scrollToOffset","m","month","scrollTo","nextCurrent","getTime","scrollToMonth","rowclone","newrows","val","propbump","setState","viewableItems","rowIsCloseToViewable","index","distance","abs","parseInt","visibleMonths","rowShouldBeRendered","onVisibleMonthsChange","item","testID","undefined","calendarStyle","data","doNotTriggerListeners","currMont","onMonthChange","staticHeader","useStaticHeader","indicator","showIndicator","indicatorColor","headerStyle","hideArrows","renderArrow","monthFormat","hideDayNames","showWeekNumbers","onPressArrowLeft","onPressArrowRight","STATIC_HEADER","c","container","removeClippedSubviews","pagingEnabled","showScrollIndicator","scrollEnabled","keyExtractor","getMonthIndex","scrollsToTop","onEndReachedThreshold","onEndReached","keyboardShouldPersistTaps","renderStaticHeader","Component","displayName","propTypes","Calendar","PropTypes","number","bool","oneOf","oneOfType","object","array","func","defaultProps","Platform","OS","String"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {FlatList, Platform, Dimensions, ActivityIndicator, View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport {xdateToData, parseDate} from '../interface';\nimport styleConstructor from './style';\nimport dateutils from '../dateutils';\nimport Calendar from '../calendar';\nimport CalendarListItem from './item';\nimport CalendarHeader from '../calendar/header/index';\nimport {STATIC_HEADER} from '../testIDs';\n\n\nconst {width} = Dimensions.get('window');\n\n/**\n * @description: Calendar List component for both vertical and horizontal calendars\n * @extends: Calendar\n * @extendslink: docs/Calendar\n * @example: https://github.com/wix/react-native-calendars/blob/master/example/src/screens/calendarsList.js\n * @gif: https://github.com/wix/react-native-calendars/blob/master/demo/calendar-list.gif\n */\nclass CalendarList extends Component {\n  static displayName = 'CalendarList';\n\n  static propTypes = {\n    ...Calendar.propTypes,\n    /** Max amount of months allowed to scroll to the past. Default = 50 */\n    pastScrollRange: PropTypes.number,\n    /** Max amount of months allowed to scroll to the future. Default = 50 */\n    futureScrollRange: PropTypes.number,\n    /** Enable or disable scrolling of calendar list */\n    scrollEnabled: PropTypes.bool,\n    /** Enable or disable vertical scroll indicator. Default = false */\n    showScrollIndicator: PropTypes.bool,\n    /** When true, the calendar list scrolls to top when the status bar is tapped. Default = true */\n    scrollsToTop: PropTypes.bool,\n    /** Enable or disable paging on scroll */\n    pagingEnabled: PropTypes.bool,\n    /** Whether the scroll is horizontal */\n    horizontal: PropTypes.bool,\n    /** Used when calendar scroll is horizontal, default is device width, pagination should be disabled */\n    calendarWidth: PropTypes.number,\n    /** Dynamic calendar height */\n    calendarHeight: PropTypes.number,\n    /** Should Keyboard persist taps */\n    keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n    /** Style for the List item (the calendar) */\n    calendarStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n    /** Whether to use static header that will not scroll with the list (horizontal only) */\n    staticHeader: PropTypes.bool,\n    /** A custom key extractor for the generated calendar months */\n    keyExtractor: PropTypes.func\n  }\n\n  static defaultProps = {\n    horizontal: false,\n    calendarWidth: width,\n    calendarHeight: 360,\n    pastScrollRange: 50,\n    futureScrollRange: 50,\n    showScrollIndicator: false,\n    scrollEnabled: true,\n    scrollsToTop: false,\n    removeClippedSubviews: Platform.OS === 'android',\n    keyExtractor: (item, index) => String(index)\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n\n    this.viewabilityConfig = {\n      itemVisiblePercentThreshold: 20\n    };\n\n    const rows = [];\n    const texts = [];\n    const date = parseDate(props.current) || XDate();\n\n    for (let i = 0; i <= this.props.pastScrollRange + this.props.futureScrollRange; i++) {\n      const rangeDate = date.clone().addMonths(i - this.props.pastScrollRange, true);\n      const rangeDateStr = rangeDate.toString('MMM yyyy');\n      texts.push(rangeDateStr);\n      /*\n       * This selects range around current shown month [-0, +2] or [-1, +1] month for detail calendar rendering.\n       * If `this.pastScrollRange` is `undefined` it's equal to `false` or 0 in next condition.\n       */\n      if (this.props.pastScrollRange - 1 <= i && i <= this.props.pastScrollRange + 1 || !this.props.pastScrollRange && i <= this.props.pastScrollRange + 2) {\n        rows.push(rangeDate);\n      } else {\n        rows.push(rangeDateStr);\n      }\n    }\n\n    this.state = {\n      rows,\n      texts,\n      openDate: date,\n      currentMonth: parseDate(props.current)\n    };\n\n    this.onViewableItemsChangedBound = this.onViewableItemsChanged.bind(this);\n    this.renderCalendarBound = this.renderCalendar.bind(this);\n    this.getItemLayout = this.getItemLayout.bind(this);\n    this.onLayout = this.onLayout.bind(this);\n  }\n\n  onLayout(event) {\n    if (this.props.onLayout) {\n      this.props.onLayout(event);\n    }\n  }\n\n  scrollToDay(d, offset, animated) {\n    const day = parseDate(d);\n    const diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(day.clone().setDate(1)));\n    const size = this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight;\n    let scrollAmount = (size * this.props.pastScrollRange) + (diffMonths * size) + (offset || 0);\n\n    if (!this.props.horizontal) {\n      let week = 0;\n      const days = dateutils.page(day, this.props.firstDay);\n      for (let i = 0; i < days.length; i++) {\n        week = Math.floor(i / 7);\n        if (dateutils.sameDate(days[i], day)) {\n          scrollAmount += 46 * week;\n          break;\n        }\n      }\n    }\n    this.listView.scrollToOffset({offset: scrollAmount, animated});\n  }\n\n  scrollToMonth(m) {\n    const month = parseDate(m);\n    const scrollTo = month || this.state.openDate;\n    let diffMonths = Math.round(this.state.openDate.clone().setDate(1).diffMonths(scrollTo.clone().setDate(1)));\n    const size = this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight;\n    const scrollAmount = (size * this.props.pastScrollRange) + (diffMonths * size);\n\n    this.listView.scrollToOffset({offset: scrollAmount, animated: false});\n  }\n\n  UNSAFE_componentWillReceiveProps(props) {\n    const current = parseDate(this.props.current);\n    const nextCurrent = parseDate(props.current);\n\n    if (nextCurrent && current && nextCurrent.getTime() !== current.getTime()) {\n      this.scrollToMonth(nextCurrent);\n    }\n\n    const rowclone = this.state.rows;\n    const newrows = [];\n\n    for (let i = 0; i < rowclone.length; i++) {\n      let val = this.state.texts[i];\n      if (rowclone[i].getTime) {\n        val = rowclone[i].clone();\n        val.propbump = rowclone[i].propbump ? rowclone[i].propbump + 1 : 1;\n      }\n      newrows.push(val);\n    }\n    this.setState({\n      rows: newrows\n    });\n  }\n\n  onViewableItemsChanged({viewableItems}) {\n    function rowIsCloseToViewable(index, distance) {\n      for (let i = 0; i < viewableItems.length; i++) {\n        if (Math.abs(index - parseInt(viewableItems[i].index)) <= distance) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    const rowclone = this.state.rows;\n    const newrows = [];\n    const visibleMonths = [];\n\n    for (let i = 0; i < rowclone.length; i++) {\n      let val = rowclone[i];\n      const rowShouldBeRendered = rowIsCloseToViewable(i, 1);\n\n      if (rowShouldBeRendered && !rowclone[i].getTime) {\n        val = this.state.openDate.clone().addMonths(i - this.props.pastScrollRange, true);\n      } else if (!rowShouldBeRendered) {\n        val = this.state.texts[i];\n      }\n      newrows.push(val);\n      if (rowIsCloseToViewable(i, 0)) {\n        visibleMonths.push(xdateToData(val));\n      }\n    }\n\n    if (this.props.onVisibleMonthsChange) {\n      this.props.onVisibleMonthsChange(visibleMonths);\n    }\n\n    this.setState({\n      rows: newrows,\n      currentMonth: parseDate(visibleMonths[0])\n    });\n  }\n\n  renderCalendar({item}) {\n    return (\n      <CalendarListItem\n        testID={`${this.props.testID}_${item}`}\n        scrollToMonth={this.scrollToMonth.bind(this)}\n        item={item}\n        calendarHeight={this.props.calendarHeight}\n        calendarWidth={this.props.horizontal ? this.props.calendarWidth : undefined}\n        {...this.props}\n        style={this.props.calendarStyle}\n      />\n    );\n  }\n\n  getItemLayout(data, index) {\n    return {\n      length: this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight,\n      offset: (this.props.horizontal ? this.props.calendarWidth : this.props.calendarHeight) * index, index\n    };\n  }\n\n  getMonthIndex(month) {\n    let diffMonths = this.state.openDate.diffMonths(month) + this.props.pastScrollRange;\n    return diffMonths;\n  }\n\n  addMonth = (count) => {\n    this.updateMonth(this.state.currentMonth.clone().addMonths(count, true));\n  }\n\n  updateMonth(day, doNotTriggerListeners) {\n    if (day.toString('yyyy MM') === this.state.currentMonth.toString('yyyy MM')) {\n      return;\n    }\n\n    this.setState({\n      currentMonth: day.clone()\n    }, () => {\n      this.scrollToMonth(this.state.currentMonth);\n\n      if (!doNotTriggerListeners) {\n        const currMont = this.state.currentMonth.clone();\n        if (this.props.onMonthChange) {\n          this.props.onMonthChange(xdateToData(currMont));\n        }\n        if (this.props.onVisibleMonthsChange) {\n          this.props.onVisibleMonthsChange([xdateToData(currMont)]);\n        }\n      }\n    });\n  }\n\n  renderStaticHeader() {\n    const {staticHeader, horizontal} = this.props;\n    const useStaticHeader = staticHeader && horizontal;\n\n    if (useStaticHeader) {\n      let indicator;\n      if (this.props.showIndicator) {\n        indicator = <ActivityIndicator color={this.props.theme && this.props.theme.indicatorColor}/>;\n      }\n\n      return (\n        <CalendarHeader\n          style={[this.style.staticHeader, this.props.headerStyle]}\n          month={this.state.currentMonth}\n          addMonth={this.addMonth}\n          showIndicator={indicator}\n          theme={this.props.theme}\n          hideArrows={this.props.hideArrows}\n          firstDay={this.props.firstDay}\n          renderArrow={this.props.renderArrow}\n          monthFormat={this.props.monthFormat}\n          hideDayNames={this.props.hideDayNames}\n          weekNumbers={this.props.showWeekNumbers}\n          onPressArrowLeft={this.props.onPressArrowLeft}\n          onPressArrowRight={this.props.onPressArrowRight}\n          testID={STATIC_HEADER}\n          accessibilityElementsHidden={true} // iOS\n          importantForAccessibility={'no-hide-descendants'} // Android\n        />\n      );\n    }\n  }\n\n  render() {\n    return (\n      <View>\n        <FlatList\n          testID={this.props.testID}\n          onLayout={this.onLayout}\n          ref={(c) => this.listView = c}\n          //scrollEventThrottle={1000}\n          style={[this.style.container, this.props.style]}\n          initialListSize={this.props.pastScrollRange + this.props.futureScrollRange + 1} // ListView deprecated\n          data={this.state.rows}\n          //snapToAlignment='start'\n          //snapToInterval={this.calendarHeight}\n          removeClippedSubviews={this.props.removeClippedSubviews}\n          pageSize={1} // ListView deprecated\n          horizontal={this.props.horizontal}\n          pagingEnabled={this.props.pagingEnabled}\n          onViewableItemsChanged={this.onViewableItemsChangedBound}\n          viewabilityConfig={this.viewabilityConfig}\n          renderItem={this.renderCalendarBound}\n          showsVerticalScrollIndicator={this.props.showScrollIndicator}\n          showsHorizontalScrollIndicator={this.props.showScrollIndicator}\n          scrollEnabled={this.props.scrollEnabled}\n          keyExtractor={this.props.keyExtractor}\n          initialScrollIndex={this.state.openDate ? this.getMonthIndex(this.state.openDate) : false}\n          getItemLayout={this.getItemLayout}\n          scrollsToTop={this.props.scrollsToTop}\n          onEndReachedThreshold={this.props.onEndReachedThreshold}\n          onEndReached={this.props.onEndReached}\n          keyboardShouldPersistTaps={this.props.keyboardShouldPersistTaps}\n        />\n        {this.renderStaticHeader()}\n      </View>\n    );\n  }\n}\n\nexport default CalendarList;\n"]},"metadata":{},"sourceType":"script"}