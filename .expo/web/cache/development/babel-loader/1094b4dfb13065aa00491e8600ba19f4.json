{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _core = require(\"@unimodules/core\");\n\nvar warningHasBeenShown = false;\nvar _default = {\n  addListener: function addListener() {\n    if (!warningHasBeenShown) {\n      console.warn(\"[expo-notifications] Notifications handling is not yet fully supported on \" + _core.Platform.OS + \". Handling notifications will have no effect.\");\n      warningHasBeenShown = true;\n    }\n  },\n  removeListeners: function removeListeners() {}\n};\nexports.default = _default;","map":{"version":3,"sources":["../src/NotificationsHandlerModule.ts"],"names":[],"mappings":";;;;;AAAA;;AAIA,IAAI,mBAAmB,GAAG,KAA1B;eAEe;AACb,EAAA,WAAW,EAAE,uBAAK;AAChB,QAAI,CAAC,mBAAL,EAA0B;AACxB,MAAA,OAAO,CAAC,IAAR,gFAC+E,eAAS,EADxF;AAGA,MAAA,mBAAmB,GAAG,IAAtB;AACD;AACF,GARY;AASb,EAAA,eAAe,EAAE,2BAAK,CAAG;AATZ,C","sourcesContent":["import { Platform } from '@unimodules/core';\n\nimport { NotificationsHandlerModule } from './NotificationsHandlerModule.types';\n\nlet warningHasBeenShown = false;\n\nexport default {\n  addListener: () => {\n    if (!warningHasBeenShown) {\n      console.warn(\n        `[expo-notifications] Notifications handling is not yet fully supported on ${Platform.OS}. Handling notifications will have no effect.`\n      );\n      warningHasBeenShown = true;\n    }\n  },\n  removeListeners: () => {},\n} as NotificationsHandlerModule;\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}