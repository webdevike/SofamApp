{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getInstallReferrerAsync = getInstallReferrerAsync;\nexports.getIosIdForVendorAsync = getIosIdForVendorAsync;\nexports.getIosApplicationReleaseTypeAsync = getIosApplicationReleaseTypeAsync;\nexports.getIosPushNotificationServiceEnvironmentAsync = getIosPushNotificationServiceEnvironmentAsync;\nexports.getInstallationTimeAsync = getInstallationTimeAsync;\nexports.getLastUpdateTimeAsync = getLastUpdateTimeAsync;\nexports.ApplicationReleaseType = exports.androidId = exports.applicationId = exports.applicationName = exports.nativeBuildVersion = exports.nativeApplicationVersion = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _core = require(\"@unimodules/core\");\n\nvar _ExpoApplication = _interopRequireDefault(require(\"./ExpoApplication\"));\n\nvar nativeApplicationVersion = _ExpoApplication.default ? _ExpoApplication.default.nativeApplicationVersion || null : null;\nexports.nativeApplicationVersion = nativeApplicationVersion;\nvar nativeBuildVersion = _ExpoApplication.default ? _ExpoApplication.default.nativeBuildVersion || null : null;\nexports.nativeBuildVersion = nativeBuildVersion;\nvar applicationName = _ExpoApplication.default ? _ExpoApplication.default.applicationName || null : null;\nexports.applicationName = applicationName;\nvar applicationId = _ExpoApplication.default ? _ExpoApplication.default.applicationId || null : null;\nexports.applicationId = applicationId;\nvar androidId = _ExpoApplication.default ? _ExpoApplication.default.androidId || null : null;\nexports.androidId = androidId;\n\nfunction getInstallReferrerAsync() {\n  return _regenerator.default.async(function getInstallReferrerAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (_ExpoApplication.default.getInstallReferrerAsync) {\n            _context.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n\n        case 2:\n          _context.next = 4;\n          return _regenerator.default.awrap(_ExpoApplication.default.getInstallReferrerAsync());\n\n        case 4:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getIosIdForVendorAsync() {\n  return _regenerator.default.async(function getIosIdForVendorAsync$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          if (_ExpoApplication.default.getIosIdForVendorAsync) {\n            _context2.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n\n        case 2:\n          _context2.next = 4;\n          return _regenerator.default.awrap(_ExpoApplication.default.getIosIdForVendorAsync());\n\n        case 4:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nvar ApplicationReleaseType;\nexports.ApplicationReleaseType = ApplicationReleaseType;\n\n(function (ApplicationReleaseType) {\n  ApplicationReleaseType[ApplicationReleaseType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  ApplicationReleaseType[ApplicationReleaseType[\"SIMULATOR\"] = 1] = \"SIMULATOR\";\n  ApplicationReleaseType[ApplicationReleaseType[\"ENTERPRISE\"] = 2] = \"ENTERPRISE\";\n  ApplicationReleaseType[ApplicationReleaseType[\"DEVELOPMENT\"] = 3] = \"DEVELOPMENT\";\n  ApplicationReleaseType[ApplicationReleaseType[\"AD_HOC\"] = 4] = \"AD_HOC\";\n  ApplicationReleaseType[ApplicationReleaseType[\"APP_STORE\"] = 5] = \"APP_STORE\";\n})(ApplicationReleaseType || (exports.ApplicationReleaseType = ApplicationReleaseType = {}));\n\nfunction getIosApplicationReleaseTypeAsync() {\n  return _regenerator.default.async(function getIosApplicationReleaseTypeAsync$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          if (_ExpoApplication.default.getApplicationReleaseTypeAsync) {\n            _context3.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n\n        case 2:\n          _context3.next = 4;\n          return _regenerator.default.awrap(_ExpoApplication.default.getApplicationReleaseTypeAsync());\n\n        case 4:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 5:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getIosPushNotificationServiceEnvironmentAsync() {\n  return _regenerator.default.async(function getIosPushNotificationServiceEnvironmentAsync$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          if (_ExpoApplication.default.getPushNotificationServiceEnvironmentAsync) {\n            _context4.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n\n        case 2:\n          _context4.next = 4;\n          return _regenerator.default.awrap(_ExpoApplication.default.getPushNotificationServiceEnvironmentAsync());\n\n        case 4:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getInstallationTimeAsync() {\n  var installationTime;\n  return _regenerator.default.async(function getInstallationTimeAsync$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          if (_ExpoApplication.default.getInstallationTimeAsync) {\n            _context5.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n\n        case 2:\n          _context5.next = 4;\n          return _regenerator.default.awrap(_ExpoApplication.default.getInstallationTimeAsync());\n\n        case 4:\n          installationTime = _context5.sent;\n          return _context5.abrupt(\"return\", new Date(installationTime));\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\n\nfunction getLastUpdateTimeAsync() {\n  var lastUpdateTime;\n  return _regenerator.default.async(function getLastUpdateTimeAsync$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          if (_ExpoApplication.default.getLastUpdateTimeAsync) {\n            _context6.next = 2;\n            break;\n          }\n\n          throw new _core.UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n\n        case 2:\n          _context6.next = 4;\n          return _regenerator.default.awrap(_ExpoApplication.default.getLastUpdateTimeAsync());\n\n        case 4:\n          lastUpdateTime = _context6.sent;\n          return _context6.abrupt(\"return\", new Date(lastUpdateTime));\n\n        case 6:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/Application.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnavailabilityError } from '@unimodules/core';\n\nimport ExpoApplication from './ExpoApplication';\n\nexport const nativeApplicationVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeApplicationVersion || null\n  : null;\nexport const nativeBuildVersion: string | null = ExpoApplication\n  ? ExpoApplication.nativeBuildVersion || null\n  : null;\nexport const applicationName: string | null = ExpoApplication\n  ? ExpoApplication.applicationName || null\n  : null;\nexport const applicationId: string | null = ExpoApplication\n  ? ExpoApplication.applicationId || null\n  : null;\nexport const androidId: string | null = ExpoApplication ? ExpoApplication.androidId || null : null;\n\nexport async function getInstallReferrerAsync(): Promise<string> {\n  if (!ExpoApplication.getInstallReferrerAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallReferrerAsync');\n  }\n  return await ExpoApplication.getInstallReferrerAsync();\n}\n\nexport async function getIosIdForVendorAsync(): Promise<string> {\n  if (!ExpoApplication.getIosIdForVendorAsync) {\n    throw new UnavailabilityError('expo-application', 'getIosIdForVendorAsync');\n  }\n  return await ExpoApplication.getIosIdForVendorAsync();\n}\n\nexport enum ApplicationReleaseType {\n  UNKNOWN = 0,\n  SIMULATOR = 1,\n  ENTERPRISE = 2,\n  DEVELOPMENT = 3,\n  AD_HOC = 4,\n  APP_STORE = 5,\n}\n\nexport async function getIosApplicationReleaseTypeAsync(): Promise<ApplicationReleaseType> {\n  if (!ExpoApplication.getApplicationReleaseTypeAsync) {\n    throw new UnavailabilityError('expo-application', 'getApplicationReleaseTypeAsync');\n  }\n  return await ExpoApplication.getApplicationReleaseTypeAsync();\n}\n\nexport async function getIosPushNotificationServiceEnvironmentAsync(): Promise<string> {\n  if (!ExpoApplication.getPushNotificationServiceEnvironmentAsync) {\n    throw new UnavailabilityError('expo-application', 'getPushNotificationServiceEnvironmentAsync');\n  }\n  return await ExpoApplication.getPushNotificationServiceEnvironmentAsync();\n}\n\nexport async function getInstallationTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getInstallationTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getInstallationTimeAsync');\n  }\n  const installationTime = await ExpoApplication.getInstallationTimeAsync();\n  return new Date(installationTime);\n}\n\nexport async function getLastUpdateTimeAsync(): Promise<Date> {\n  if (!ExpoApplication.getLastUpdateTimeAsync) {\n    throw new UnavailabilityError('expo-application', 'getLastUpdateTimeAsync');\n  }\n  const lastUpdateTime = await ExpoApplication.getLastUpdateTimeAsync();\n  return new Date(lastUpdateTime);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}