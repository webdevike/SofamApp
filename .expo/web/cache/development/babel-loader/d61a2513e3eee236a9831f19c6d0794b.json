{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WelcomeScreen = void 0;\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _theme = require(\"../../theme\");\n\nvar _client = require(\"@apollo/client\");\n\nvar _cache = require(\"../../cache\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/app/screens/welcome-screen/welcome-screen.tsx\";\n\nfunction _templateObject3() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n    query IsUserLoggedIn {\\n      isLoggedIn @client\\n    }\\n  \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  mutation Login($email: String!, $password: String!) {\\n    login(email: $email, password: $password)\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  {\\n  users {\\n    name\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar bowserLogo = require(\"./bowser.png\");\n\nvar FULL = {\n  flex: 1\n};\nvar CONTAINER = {\n  backgroundColor: _theme.color.transparent,\n  paddingHorizontal: _theme.spacing[4]\n};\nvar TEXT = {\n  color: _theme.color.palette.white,\n  fontFamily: _theme.typography.primary\n};\nvar BOLD = {\n  fontWeight: \"bold\"\n};\nvar HEADER = {\n  paddingTop: _theme.spacing[3],\n  paddingBottom: _theme.spacing[4] + _theme.spacing[1],\n  paddingHorizontal: 0\n};\n\nvar HEADER_TITLE = _objectSpread(_objectSpread(_objectSpread({}, TEXT), BOLD), {}, {\n  fontSize: 12,\n  lineHeight: 15,\n  textAlign: \"center\",\n  letterSpacing: 1.5\n});\n\nvar TITLE_WRAPPER = _objectSpread(_objectSpread({}, TEXT), {}, {\n  textAlign: \"center\"\n});\n\nvar TITLE = _objectSpread(_objectSpread(_objectSpread({}, TEXT), BOLD), {}, {\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\"\n});\n\nvar ALMOST = _objectSpread(_objectSpread(_objectSpread({}, TEXT), BOLD), {}, {\n  fontSize: 26,\n  fontStyle: \"italic\"\n});\n\nvar BOWSER = {\n  alignSelf: \"center\",\n  marginVertical: _theme.spacing[5],\n  maxWidth: \"100%\"\n};\n\nvar CONTENT = _objectSpread(_objectSpread({}, TEXT), {}, {\n  color: \"#BAB6C8\",\n  fontSize: 15,\n  lineHeight: 22,\n  marginBottom: _theme.spacing[5]\n});\n\nvar CONTINUE = {\n  paddingVertical: _theme.spacing[4],\n  paddingHorizontal: _theme.spacing[4],\n  backgroundColor: \"#5D2555\"\n};\n\nvar CONTINUE_TEXT = _objectSpread(_objectSpread(_objectSpread({}, TEXT), BOLD), {}, {\n  fontSize: 13,\n  letterSpacing: 2\n});\n\nvar TEXT_INPUT = {\n  paddingVertical: _theme.spacing[4],\n  paddingHorizontal: _theme.spacing[4],\n  marginBottom: _theme.spacing[5],\n  backgroundColor: \"white\"\n};\nvar FOOTER = {\n  backgroundColor: \"#20162D\"\n};\nvar FOOTER_CONTENT = {\n  paddingVertical: _theme.spacing[4],\n  paddingHorizontal: _theme.spacing[4]\n};\nvar USERS = (0, _client.gql)(_templateObject());\nvar LOGIN = (0, _client.gql)(_templateObject2());\nvar IS_LOGGED_IN = (0, _client.gql)(_templateObject3());\nvar WelcomeScreen = (0, _mobxReactLite.observer)(function WelcomeScreen() {\n  var navigation = (0, _native.useNavigation)();\n\n  var nextScreen = function nextScreen() {\n    _cache.cache.writeQuery({\n      query: IS_LOGGED_IN,\n      data: {\n        isLoggedIn: false\n      }\n    });\n  };\n\n  var _useMutation = (0, _client.useMutation)(LOGIN),\n      _useMutation2 = (0, _slicedToArray2.default)(_useMutation, 2),\n      login = _useMutation2[0],\n      data = _useMutation2[1].data;\n\n  var _useQuery = (0, _client.useQuery)(IS_LOGGED_IN),\n      loggedIn = _useQuery.data;\n\n  var _React$useState = _react.default.useState(\"\"),\n      _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n      password = _React$useState2[0],\n      onPasswordChange = _React$useState2[1];\n\n  var _React$useState3 = _react.default.useState(\"\"),\n      _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n      email = _React$useState4[0],\n      onEmailChange = _React$useState4[1];\n\n  return _react.default.createElement(_reactNative.Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 5\n    }\n  }, \"Hello\");\n});\nexports.WelcomeScreen = WelcomeScreen;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/screens/welcome-screen/welcome-screen.tsx"],"names":["bowserLogo","require","FULL","flex","CONTAINER","backgroundColor","color","transparent","paddingHorizontal","spacing","TEXT","palette","white","fontFamily","typography","primary","BOLD","fontWeight","HEADER","paddingTop","paddingBottom","HEADER_TITLE","fontSize","lineHeight","textAlign","letterSpacing","TITLE_WRAPPER","TITLE","ALMOST","fontStyle","BOWSER","alignSelf","marginVertical","maxWidth","CONTENT","marginBottom","CONTINUE","paddingVertical","CONTINUE_TEXT","TEXT_INPUT","FOOTER","FOOTER_CONTENT","USERS","gql","LOGIN","IS_LOGGED_IN","WelcomeScreen","navigation","nextScreen","cache","writeQuery","query","data","isLoggedIn","login","loggedIn","React","useState","password","onPasswordChange","email","onEmailChange"],"mappings":"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","sourcesContent":["import React, { FunctionComponent as Component } from \"react\"\nimport { View, Image, ViewStyle, TextStyle, ImageStyle, Text } from \"react-native\"\nimport { useNavigation } from \"@react-navigation/native\"\nimport { observer } from \"mobx-react-lite\"\nimport { Button, Header, Screen, Wallpaper } from \"../../components\"\nimport { color, spacing, typography } from \"../../theme\"\nimport { useQuery, gql, useMutation } from \"@apollo/client\"\nimport { cache } from '../../cache'\nimport { TextInput } from \"react-native-gesture-handler\"\n\nconst bowserLogo = require(\"./bowser.png\")\n\nconst FULL: ViewStyle = { flex: 1 }\nconst CONTAINER: ViewStyle = {\n  backgroundColor: color.transparent,\n  paddingHorizontal: spacing[4],\n}\nconst TEXT: TextStyle = {\n  color: color.palette.white,\n  fontFamily: typography.primary,\n}\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\nconst HEADER: TextStyle = {\n  paddingTop: spacing[3],\n  paddingBottom: spacing[4] + spacing[1],\n  paddingHorizontal: 0,\n}\nconst HEADER_TITLE: TextStyle = {\n  ...TEXT,\n  ...BOLD,\n  fontSize: 12,\n  lineHeight: 15,\n  textAlign: \"center\",\n  letterSpacing: 1.5,\n}\nconst TITLE_WRAPPER: TextStyle = {\n  ...TEXT,\n  textAlign: \"center\",\n}\nconst TITLE: TextStyle = {\n  ...TEXT,\n  ...BOLD,\n  fontSize: 28,\n  lineHeight: 38,\n  textAlign: \"center\",\n}\nconst ALMOST: TextStyle = {\n  ...TEXT,\n  ...BOLD,\n  fontSize: 26,\n  fontStyle: \"italic\",\n}\nconst BOWSER: ImageStyle = {\n  alignSelf: \"center\",\n  marginVertical: spacing[5],\n  maxWidth: \"100%\",\n}\nconst CONTENT: TextStyle = {\n  ...TEXT,\n  color: \"#BAB6C8\",\n  fontSize: 15,\n  lineHeight: 22,\n  marginBottom: spacing[5],\n}\nconst CONTINUE: ViewStyle = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n  backgroundColor: \"#5D2555\",\n}\nconst CONTINUE_TEXT: TextStyle = {\n  ...TEXT,\n  ...BOLD,\n  fontSize: 13,\n  letterSpacing: 2,\n}\n\nconst TEXT_INPUT: ViewStyle = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n  marginBottom: spacing[5],\n  backgroundColor: \"white\",\n}\n\nconst FOOTER: ViewStyle = { backgroundColor: \"#20162D\" }\nconst FOOTER_CONTENT: ViewStyle = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n}\n\nconst USERS = gql`\n  {\n  users {\n    name\n  }\n}`\n\nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password)\n  }\n`\n\nconst IS_LOGGED_IN = gql`\n    query IsUserLoggedIn {\n      isLoggedIn @client\n    }\n  `\n\nexport const WelcomeScreen: Component = observer(function WelcomeScreen() {\n  const navigation = useNavigation()\n  const nextScreen = () => {\n    cache.writeQuery({\n      query: IS_LOGGED_IN,\n      data: {\n        isLoggedIn: false\n      },\n    })\n  }\n  // const { loading, error, data } = useQuery(USERS)\n  const [login, { data }] = useMutation(LOGIN)\n  const { data: loggedIn } = useQuery(IS_LOGGED_IN)\n\n  const [password, onPasswordChange] = React.useState(\"\")\n  const [email, onEmailChange] = React.useState(\"\")\n\n  // TODO image picker\n  // const _pickImage = async () => {\n  //   try {\n  //     const result = await ImagePicker.launchImageLibraryAsync({\n  //       mediaTypes: ImagePicker.MediaTypeOptions.All,\n  //       allowsEditing: true,\n  //       aspect: [4, 3],\n  //       quality: 1,\n  //     })\n  //     console.log(result)\n  //   } catch (E) {\n  //     console.log(E)\n  //   }\n  // }\n\n  // if (loading) {\n  //   return (\n  //     <View style={FULL}>\n  //       <Wallpaper />\n  //       <Screen style={CONTAINER} preset=\"scroll\" backgroundColor={color.transparent}>\n  //         <Text>..loading</Text>\n  //       </Screen>\n  //     </View>\n  //   )\n  // }\n  // if (error) {\n  //   return (\n  //     <View style={FULL}>\n  //       <Wallpaper />\n  //       <Screen style={CONTAINER} preset=\"scroll\" backgroundColor={color.transparent}>\n  //         <Text>{JSON.stringify(error, undefined, 2)}</Text>\n  //       </Screen>\n  //     </View>\n  //   )\n  // }\n  return (\n    <Text>Hello</Text>\n  )\n})\n"]},"metadata":{},"sourceType":"script"}