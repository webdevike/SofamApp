{"ast":null,"code":"var _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = styleConstructor;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar defaultStyle = _interopRequireWildcard(require(\"../../../style\"));\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar STYLESHEET_ID = 'stylesheet.day.single';\n\nfunction styleConstructor() {\n  var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var appStyle = _objectSpread(_objectSpread({}, defaultStyle), theme);\n\n  return _reactNative.StyleSheet.create(_objectSpread({\n    base: {\n      width: 32,\n      height: 32,\n      alignItems: 'center'\n    },\n    text: {\n      marginTop: _reactNative.Platform.OS === 'android' ? 4 : 6,\n      fontSize: appStyle.textDayFontSize,\n      fontFamily: appStyle.textDayFontFamily,\n      fontWeight: appStyle.textDayFontWeight,\n      color: appStyle.dayTextColor,\n      backgroundColor: 'rgba(255, 255, 255, 0)'\n    },\n    alignedText: {\n      marginTop: _reactNative.Platform.OS === 'android' ? 4 : 6\n    },\n    selected: {\n      backgroundColor: appStyle.selectedDayBackgroundColor,\n      borderRadius: 16\n    },\n    today: {\n      backgroundColor: appStyle.todayBackgroundColor\n    },\n    todayText: {\n      color: appStyle.todayTextColor\n    },\n    selectedText: {\n      color: appStyle.selectedDayTextColor\n    },\n    disabledText: {\n      color: appStyle.textDisabledColor\n    }\n  }, theme[STYLESHEET_ID] || {}));\n}","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/calendar/day/custom/style.js"],"names":["STYLESHEET_ID","styleConstructor","theme","appStyle","defaultStyle","StyleSheet","create","base","width","height","alignItems","text","marginTop","Platform","OS","fontSize","textDayFontSize","fontFamily","textDayFontFamily","fontWeight","textDayFontWeight","color","dayTextColor","backgroundColor","alignedText","selected","selectedDayBackgroundColor","borderRadius","today","todayBackgroundColor","todayText","todayTextColor","selectedText","selectedDayTextColor","disabledText","textDisabledColor"],"mappings":";;;;;;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,aAAa,GAAG,uBAAtB;;AAEe,SAASC,gBAAT,GAAoC;AAAA,MAAVC,KAAU,uEAAJ,EAAI;;AACjD,MAAMC,QAAQ,mCAAOC,YAAP,GAAwBF,KAAxB,CAAd;;AACA,SAAOG,wBAAWC,MAAX;AACLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,UAAU,EAAE;AAHR,KADD;AAMLC,IAAAA,IAAI,EAAE;AACJC,MAAAA,SAAS,EAAEC,sBAASC,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgC,CADvC;AAEJC,MAAAA,QAAQ,EAAEZ,QAAQ,CAACa,eAFf;AAGJC,MAAAA,UAAU,EAAEd,QAAQ,CAACe,iBAHjB;AAIJC,MAAAA,UAAU,EAAEhB,QAAQ,CAACiB,iBAJjB;AAKJC,MAAAA,KAAK,EAAElB,QAAQ,CAACmB,YALZ;AAMJC,MAAAA,eAAe,EAAE;AANb,KAND;AAcLC,IAAAA,WAAW,EAAE;AACXZ,MAAAA,SAAS,EAAEC,sBAASC,EAAT,KAAgB,SAAhB,GAA4B,CAA5B,GAAgC;AADhC,KAdR;AAiBLW,IAAAA,QAAQ,EAAE;AACRF,MAAAA,eAAe,EAAEpB,QAAQ,CAACuB,0BADlB;AAERC,MAAAA,YAAY,EAAE;AAFN,KAjBL;AAqBLC,IAAAA,KAAK,EAAE;AACLL,MAAAA,eAAe,EAAEpB,QAAQ,CAAC0B;AADrB,KArBF;AAwBLC,IAAAA,SAAS,EAAE;AACTT,MAAAA,KAAK,EAAElB,QAAQ,CAAC4B;AADP,KAxBN;AA2BLC,IAAAA,YAAY,EAAE;AACZX,MAAAA,KAAK,EAAElB,QAAQ,CAAC8B;AADJ,KA3BT;AA8BLC,IAAAA,YAAY,EAAE;AACZb,MAAAA,KAAK,EAAElB,QAAQ,CAACgC;AADJ;AA9BT,KAiCDjC,KAAK,CAACF,aAAD,CAAL,IAAwB,EAjCvB,EAAP;AAmCD","sourcesContent":["import {StyleSheet, Platform} from 'react-native';\nimport * as defaultStyle from '../../../style';\n\nconst STYLESHEET_ID = 'stylesheet.day.single';\n\nexport default function styleConstructor(theme={}) {\n  const appStyle = {...defaultStyle, ...theme};\n  return StyleSheet.create({\n    base: {\n      width: 32,\n      height: 32,\n      alignItems: 'center'\n    },\n    text: {\n      marginTop: Platform.OS === 'android' ? 4 : 6,\n      fontSize: appStyle.textDayFontSize,\n      fontFamily: appStyle.textDayFontFamily,\n      fontWeight: appStyle.textDayFontWeight,\n      color: appStyle.dayTextColor,\n      backgroundColor: 'rgba(255, 255, 255, 0)'\n    },\n    alignedText: {\n      marginTop: Platform.OS === 'android' ? 4 : 6\n    },\n    selected: {\n      backgroundColor: appStyle.selectedDayBackgroundColor,\n      borderRadius: 16\n    },\n    today: {\n      backgroundColor: appStyle.todayBackgroundColor\n    },\n    todayText: {\n      color: appStyle.todayTextColor\n    },\n    selectedText: {\n      color: appStyle.selectedDayTextColor\n    },\n    disabledText: {\n      color: appStyle.textDisabledColor\n    },\n    ...(theme[STYLESHEET_ID] || {})\n  });\n}\n"]},"metadata":{},"sourceType":"script"}