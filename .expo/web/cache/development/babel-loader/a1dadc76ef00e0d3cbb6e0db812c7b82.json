{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MemoryScreen = void 0;\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _components = require(\"../components\");\n\nvar _client = require(\"@apollo/client\");\n\nvar _expoStatusBar = require(\"expo-status-bar\");\n\nvar _expoAv = require(\"expo-av\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/app/screens/memory-screen.tsx\";\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n{\\n  memories {\\n    id\\n    title\\n    location\\n    createdAt\\n    thumbnail\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nvar dimensions = _reactNative.Dimensions.get('window');\n\nvar imageWidth = dimensions.width;\nvar IMAGE_MEMORY = {\n  width: imageWidth,\n  height: 400\n};\nvar MEMORY_WRAPPER = {\n  position: 'relative',\n  marginBottom: 32\n};\nvar MEMORIES = (0, _client.gql)(_templateObject());\n\nvar renderMemories = function renderMemories(_ref) {\n  var item = _ref.item;\n  var uri = item == null ? void 0 : item.thumbnail;\n\n  var renderVidoeOrThumbnail = function renderVidoeOrThumbnail() {\n    if (uri.includes('.mov')) {\n      return _react.default.createElement(_expoAv.Video, {\n        source: {\n          uri: uri\n        },\n        rate: 1.0,\n        volume: 0,\n        isMuted: false,\n        resizeMode: \"cover\",\n        shouldPlay: true,\n        isLooping: true,\n        style: {\n          height: 250,\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return _react.default.createElement(_components.ProgressiveImage, {\n        thumbnailSource: {\n          uri: \"https://images.pexels.com/photos/671557/pexels-photo-671557.jpeg?w=50&buster=\" + Math.random()\n        },\n        source: {\n          uri: item == null ? void 0 : item.thumbnail\n        },\n        style: IMAGE_MEMORY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return _react.default.createElement(_reactNative.View, {\n    style: MEMORY_WRAPPER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, renderVidoeOrThumbnail(), _react.default.createElement(_components.MemoryCard, {\n    data: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar MemoryScreen = (0, _mobxReactLite.observer)(function MemoryScreen() {\n  var _useQuery = (0, _client.useQuery)(MEMORIES),\n      memoryIsLoading = _useQuery.loading,\n      allMemories = _useQuery.data;\n\n  return _react.default.createElement(_reactNative.SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, memoryIsLoading ? _react.default.createElement(_reactNative.ActivityIndicator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }) : _react.default.createElement(_reactNative.FlatList, {\n    data: allMemories == null ? void 0 : allMemories.memories,\n    renderItem: renderMemories,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    showsVerticalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), _react.default.createElement(_expoStatusBar.StatusBar, {\n    style: \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }));\n});\nexports.MemoryScreen = MemoryScreen;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/screens/memory-screen.tsx"],"names":["dimensions","Dimensions","get","imageWidth","width","IMAGE_MEMORY","height","MEMORY_WRAPPER","position","marginBottom","MEMORIES","gql","renderMemories","item","uri","thumbnail","renderVidoeOrThumbnail","includes","flex","Math","random","MemoryScreen","memoryIsLoading","loading","allMemories","data","memories","id"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;;;AAGA,IAAMA,UAAU,GAAGC,wBAAWC,GAAX,CAAe,QAAf,CAAnB;;AACA,IAAMC,UAAU,GAAGH,UAAU,CAACI,KAA9B;AAEA,IAAMC,YAAwB,GAAG;AAC/BD,EAAAA,KAAK,EAAED,UADwB;AAE/BG,EAAAA,MAAM,EAAE;AAFuB,CAAjC;AAKA,IAAMC,cAAyB,GAAG;AAChCC,EAAAA,QAAQ,EAAE,UADsB;AAEhCC,EAAAA,YAAY,EAAE;AAFkB,CAAlC;AAKA,IAAMC,QAAQ,OAAGC,WAAH,oBAAd;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAc;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACnC,MAAMC,GAAG,GAAGD,IAAH,oBAAGA,IAAI,CAAEE,SAAlB;;AACA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAIF,GAAG,CAACG,QAAJ,CAAa,MAAb,CAAJ,EAA0B;AACxB,aACE,6BAAC,aAAD;AACE,QAAA,MAAM,EAAE;AAAEH,UAAAA,GAAG,EAAHA;AAAF,SADV;AAEE,QAAA,IAAI,EAAE,GAFR;AAGE,QAAA,MAAM,EAAE,CAHV;AAIE,QAAA,OAAO,EAAE,KAJX;AAKE,QAAA,UAAU,EAAC,OALb;AAME,QAAA,UAAU,MANZ;AAOE,QAAA,SAAS,MAPX;AAQE,QAAA,KAAK,EAAE;AACLR,UAAAA,MAAM,EAAE,GADH;AAELY,UAAAA,IAAI,EAAE;AAFD,SART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAeD,KAhBD,MAgBO;AACL,aACE,6BAAC,4BAAD;AACE,QAAA,eAAe,EAAE;AAAEJ,UAAAA,GAAG,oFAAkFK,IAAI,CAACC,MAAL;AAAvF,SADnB;AAEE,QAAA,MAAM,EAAE;AAAEN,UAAAA,GAAG,EAAED,IAAF,oBAAEA,IAAI,CAAEE;AAAb,SAFV;AAGE,QAAA,KAAK,EAAEV,YAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAQD;AACF,GA3BD;;AA4BA,SACE,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAEE,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGS,sBAAsB,EADzB,EAEE,6BAAC,sBAAD;AAAY,IAAA,IAAI,EAAEH,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD,CApCD;;AAsCO,IAAMQ,YAAuB,GAAG,6BAAS,SAASA,YAAT,GAAwB;AAAA,kBACd,sBAASX,QAAT,CADc;AAAA,MACrDY,eADqD,aAC9DC,OAD8D;AAAA,MAC9BC,WAD8B,aACpCC,IADoC;;AAEtE,SACE,6BAAC,yBAAD;AAAc,IAAA,KAAK,EAAE;AAAEP,MAAAA,IAAI,EAAE;AAAR,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEII,eAAe,GACX,6BAAC,8BAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAEX,6BAAC,qBAAD;AACA,IAAA,IAAI,EAAEE,WAAF,oBAAEA,WAAW,CAAEE,QADnB;AAEA,IAAA,UAAU,EAAEd,cAFZ;AAGA,IAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,aAAIA,IAAI,CAACc,EAAT;AAAA,KAHlB;AAIA,IAAA,4BAA4B,EAAE,KAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAWE,6BAAC,wBAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAeD,CAjBsC,CAAhC","sourcesContent":["import React, { FunctionComponent as Component } from \"react\"\nimport { observer } from \"mobx-react-lite\"\nimport { ViewStyle, Image, View, ImageStyle, Dimensions, FlatList, ActivityIndicator, SafeAreaView, Text } from \"react-native\"\nimport { MemoryCard, ProgressiveImage, Screen } from \"../components\"\nimport { color } from \"../theme\"\nimport { gql, useQuery } from \"@apollo/client\"\nimport { StatusBar } from 'expo-status-bar'\nimport { Video } from \"expo-av\"\nimport SkeletonContent from 'react-native-skeleton-content';\n\nconst dimensions = Dimensions.get('window')\nconst imageWidth = dimensions.width\n\nconst IMAGE_MEMORY: ImageStyle = {\n  width: imageWidth,\n  height: 400,\n}\n\nconst MEMORY_WRAPPER: ViewStyle = {\n  position: 'relative',\n  marginBottom: 32\n}\n\nconst MEMORIES = gql`\n{\n  memories {\n    id\n    title\n    location\n    createdAt\n    thumbnail\n  }\n}\n`\nconst renderMemories = ({ item }) => {\n  const uri = item?.thumbnail\n  const renderVidoeOrThumbnail = () => {\n    if (uri.includes('.mov')) {\n      return (\n        <Video\n          source={{ uri }}\n          rate={1.0}\n          volume={0}\n          isMuted={false}\n          resizeMode=\"cover\"\n          shouldPlay\n          isLooping\n          style={{\n            height: 250,\n            flex: 1,\n          }}\n        />\n      )\n    } else {\n      return (\n        <ProgressiveImage \n          thumbnailSource={{ uri: `https://images.pexels.com/photos/671557/pexels-photo-671557.jpeg?w=50&buster=${Math.random()}`}}\n          source={{ uri: item?.thumbnail }}\n          style={IMAGE_MEMORY} \n        />\n      \n      )\n    }\n  }\n  return (\n    <View style={MEMORY_WRAPPER}>\n      {renderVidoeOrThumbnail()}\n      <MemoryCard data={item}/>\n    </View>\n  )\n}\n\nexport const MemoryScreen: Component = observer(function MemoryScreen() {\n  const { loading: memoryIsLoading, data: allMemories } = useQuery(MEMORIES)\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      {\n        memoryIsLoading\n          ? <ActivityIndicator />\n          : <FlatList\n            data={allMemories?.memories}\n            renderItem={renderMemories}\n            keyExtractor={item => item.id}\n            showsVerticalScrollIndicator={false}\n          />\n      }\n      <StatusBar style=\"dark\" />\n    </SafeAreaView>\n  )\n})\n"]},"metadata":{},"sourceType":"script"}