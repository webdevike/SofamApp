{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = getNotificationChannelsAsync;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction getNotificationChannelsAsync() {\n  return _regenerator.default.async(function getNotificationChannelsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          console.debug('Notification channels feature is only supported on Android.');\n          return _context.abrupt(\"return\", []);\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["../src/getNotificationChannelsAsync.ts"],"names":[],"mappings":";;;;;;;;;AAEe,SAAe,4BAAf;AAAA;AAAA;AAAA;AAAA;AACb,UAAA,OAAO,CAAC,KAAR,CAAc,6DAAd;AADa,2CAEN,EAFM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { NotificationChannel } from './NotificationChannelManager.types';\n\nexport default async function getNotificationChannelsAsync(): Promise<NotificationChannel[]> {\n  console.debug('Notification channels feature is only supported on Android.');\n  return [];\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}