{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _xdate = _interopRequireDefault(require(\"xdate\"));\n\nvar _dateutils = _interopRequireDefault(require(\"../dateutils\"));\n\nvar _interface = require(\"../interface\");\n\nvar _testIDs = require(\"../testIDs\");\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _basic = _interopRequireDefault(require(\"../calendar/day/basic\"));\n\nvar _period = _interopRequireDefault(require(\"../calendar/day/period\"));\n\nvar _multiDot = _interopRequireDefault(require(\"../calendar/day/multi-dot\"));\n\nvar _multiPeriod = _interopRequireDefault(require(\"../calendar/day/multi-period\"));\n\nvar _custom = _interopRequireDefault(require(\"../calendar/day/custom\"));\n\nvar _calendar = _interopRequireDefault(require(\"../calendar\"));\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/expandableCalendar/week.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar EmptyArray = [];\n\nvar Week = function (_Component) {\n  (0, _inherits2.default)(Week, _Component);\n\n  var _super = _createSuper(Week);\n\n  function Week(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Week);\n    _this = _super.call(this, props);\n    _this.style = (0, _style.default)(props.theme);\n    return _this;\n  }\n\n  (0, _createClass2.default)(Week, [{\n    key: \"getWeek\",\n    value: function getWeek(date) {\n      if (date) {\n        var current = (0, _interface.parseDate)(date);\n        var daysArray = [current];\n        var dayOfTheWeek = current.getDay() - this.props.firstDay;\n\n        if (dayOfTheWeek < 0) {\n          dayOfTheWeek = 7 + dayOfTheWeek;\n        }\n\n        var newDate = current;\n        var index = dayOfTheWeek - 1;\n\n        while (index >= 0) {\n          newDate = (0, _interface.parseDate)(newDate).addDays(-1);\n          daysArray.unshift(newDate);\n          index -= 1;\n        }\n\n        newDate = current;\n        index = dayOfTheWeek + 1;\n\n        while (index < 7) {\n          newDate = (0, _interface.parseDate)(newDate).addDays(1);\n          daysArray.push(newDate);\n          index += 1;\n        }\n\n        return daysArray;\n      }\n    }\n  }, {\n    key: \"getDayComponent\",\n    value: function getDayComponent() {\n      var dayComponent = this.props.dayComponent;\n\n      if (dayComponent) {\n        return dayComponent;\n      }\n\n      switch (this.props.markingType) {\n        case 'period':\n          return _period.default;\n\n        case 'multi-dot':\n          return _multiDot.default;\n\n        case 'multi-period':\n          return _multiPeriod.default;\n\n        case 'custom':\n          return _custom.default;\n\n        default:\n          return _basic.default;\n      }\n    }\n  }, {\n    key: \"getDateMarking\",\n    value: function getDateMarking(day) {\n      var markedDates = this.props.markedDates;\n\n      if (!markedDates) {\n        return false;\n      }\n\n      var dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n\n      if (dates.length || dates) {\n        return dates;\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"renderDay\",\n    value: function renderDay(day, id) {\n      var _this$props = this.props,\n          current = _this$props.current,\n          disableAllTouchEventsForDisabledDays = _this$props.disableAllTouchEventsForDisabledDays;\n      var minDate = (0, _interface.parseDate)(this.props.minDate);\n      var maxDate = (0, _interface.parseDate)(this.props.maxDate);\n      var state = '';\n\n      if (this.props.disabledByDefault) {\n        state = 'disabled';\n      } else if (minDate && !_dateutils.default.isGTE(day, minDate) || maxDate && !_dateutils.default.isLTE(day, maxDate)) {\n        state = 'disabled';\n      } else if (!_dateutils.default.sameMonth(day, (0, _interface.parseDate)(current))) {\n        state = 'disabled';\n      } else if (_dateutils.default.sameDate(day, (0, _xdate.default)())) {\n        state = 'today';\n      }\n\n      if (current && this.props.hideExtraDays) {\n        if (!_dateutils.default.sameMonth(day, (0, _interface.parseDate)(current))) {\n          return _react.default.createElement(_reactNative.View, {\n            key: id,\n            style: {\n              flex: 1\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }\n          });\n        }\n      }\n\n      var DayComp = this.getDayComponent();\n      var dayDate = day.getDate();\n      var dateAsObject = (0, _interface.xdateToData)(day);\n      return _react.default.createElement(_reactNative.View, {\n        style: {\n          flex: 1,\n          alignItems: 'center'\n        },\n        key: id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(DayComp, {\n        testID: _testIDs.SELECT_DATE_SLOT + \"-\" + dateAsObject.dateString,\n        state: state,\n        theme: this.props.theme,\n        onPress: this.props.onDayPress,\n        onLongPress: this.props.onDayPress,\n        date: dateAsObject,\n        marking: this.getDateMarking(day),\n        disableAllTouchEventsForDisabledDays: disableAllTouchEventsForDisabledDays,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, dayDate));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var current = this.props.current;\n      var dates = this.getWeek(current);\n      var week = [];\n\n      if (dates) {\n        dates.forEach(function (day, id) {\n          week.push(_this2.renderDay(day, id));\n        }, this);\n      }\n\n      return _react.default.createElement(_reactNative.View, {\n        style: this.style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.View, {\n        style: [this.style.week, this.props.style],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }\n      }, week));\n    }\n  }]);\n  return Week;\n}(_react.Component);\n\nWeek.displayName = 'IGNORE';\nWeek.propTypes = _objectSpread(_objectSpread({}, _calendar.default.propTypes), {}, {\n  current: _propTypes.default.any\n});\nvar _default = Week;\nexports.default = _default;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/expandableCalendar/week.js"],"names":["EmptyArray","Week","props","style","theme","date","current","daysArray","dayOfTheWeek","getDay","firstDay","newDate","index","addDays","unshift","push","dayComponent","markingType","UnitDay","MultiDotDay","MultiPeriodDay","SingleDay","Day","day","markedDates","dates","toString","length","id","disableAllTouchEventsForDisabledDays","minDate","maxDate","state","disabledByDefault","dateutils","isGTE","isLTE","sameMonth","sameDate","hideExtraDays","flex","DayComp","getDayComponent","dayDate","getDate","dateAsObject","alignItems","SELECT_DATE_SLOT","dateString","onDayPress","getDateMarking","getWeek","week","forEach","renderDay","container","Component","displayName","propTypes","Calendar","PropTypes","any"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {View} from 'react-native';\nimport PropTypes from 'prop-types';\nimport XDate from 'xdate';\n\nimport dateutils from '../dateutils';\nimport {xdateToData, parseDate} from '../interface';\nimport {SELECT_DATE_SLOT} from '../testIDs';\nimport styleConstructor from './style';\n\nimport Day from '../calendar/day/basic';\nimport UnitDay from '../calendar/day/period';\nimport MultiDotDay from '../calendar/day/multi-dot';\nimport MultiPeriodDay from '../calendar/day/multi-period';\nimport SingleDay from '../calendar/day/custom';\nimport Calendar from '../calendar';\n\n\nconst EmptyArray = [];\n\nclass Week extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    ...Calendar.propTypes,\n    // the current date\n    current: PropTypes.any\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.style = styleConstructor(props.theme);\n  }\n\n  getWeek(date) {\n    if (date) {\n      const current = parseDate(date);\n      const daysArray = [current];\n      let dayOfTheWeek = current.getDay() - this.props.firstDay;\n      if (dayOfTheWeek < 0) { // to handle firstDay > 0\n        dayOfTheWeek = 7 + dayOfTheWeek;\n      }\n\n      let newDate = current;\n      let index = dayOfTheWeek - 1;\n      while (index >= 0) {\n        newDate = parseDate(newDate).addDays(-1);\n        daysArray.unshift(newDate);\n        index -= 1;\n      }\n\n      newDate = current;\n      index = dayOfTheWeek + 1;\n      while (index < 7) {\n        newDate = parseDate(newDate).addDays(1);\n        daysArray.push(newDate);\n        index += 1;\n      }\n      return daysArray;\n    }\n  }\n\n  getDayComponent() {\n    const {dayComponent} = this.props;\n    if (dayComponent) {\n      return dayComponent;\n    }\n\n    switch (this.props.markingType) {\n    case 'period':\n      return UnitDay;\n    case 'multi-dot':\n      return MultiDotDay;\n    case 'multi-period':\n      return MultiPeriodDay;\n    case 'custom':\n      return SingleDay;\n    default:\n      return Day;\n    }\n  }\n\n  getDateMarking(day) {\n    const {markedDates} = this.props;\n    if (!markedDates) {\n      return false;\n    }\n\n    const dates = markedDates[day.toString('yyyy-MM-dd')] || EmptyArray;\n    if (dates.length || dates) {\n      return dates;\n    } else {\n      return false;\n    }\n  }\n\n  // renderWeekNumber (weekNumber) {\n  //   return <Day key={`week-${weekNumber}`} theme={this.props.theme} marking={{disableTouchEvent: true}} state='disabled'>{weekNumber}</Day>;\n  // }\n\n  renderDay(day, id) {\n    const {current, disableAllTouchEventsForDisabledDays} = this.props;\n    const minDate = parseDate(this.props.minDate);\n    const maxDate = parseDate(this.props.maxDate);\n\n    let state = '';\n    if (this.props.disabledByDefault) {\n      state = 'disabled';\n    } else if ((minDate && !dateutils.isGTE(day, minDate)) || (maxDate && !dateutils.isLTE(day, maxDate))) {\n      state = 'disabled';\n    } else if (!dateutils.sameMonth(day, parseDate(current))) { // for extra days\n      state = 'disabled';\n    } else if (dateutils.sameDate(day, XDate())) {\n      state = 'today';\n    }\n\n    // hide extra days\n    if (current && this.props.hideExtraDays) {\n      if (!dateutils.sameMonth(day, parseDate(current))) {\n        return (<View key={id} style={{flex: 1}}/>);\n      }\n    }\n\n    const DayComp = this.getDayComponent();\n    const dayDate = day.getDate();\n    const dateAsObject = xdateToData(day);\n\n    return (\n      <View style={{flex: 1, alignItems: 'center'}} key={id}>\n        <DayComp\n          testID={`${SELECT_DATE_SLOT}-${dateAsObject.dateString}`}\n          state={state}\n          theme={this.props.theme}\n          onPress={this.props.onDayPress}\n          onLongPress={this.props.onDayPress}\n          date={dateAsObject}\n          marking={this.getDateMarking(day)}\n          disableAllTouchEventsForDisabledDays={disableAllTouchEventsForDisabledDays}\n        >\n          {dayDate}\n        </DayComp>\n      </View>\n    );\n  }\n\n  render() {\n    const {current} = this.props;\n    const dates = this.getWeek(current);\n    const week = [];\n\n    if (dates) {\n      dates.forEach((day, id) => {\n        week.push(this.renderDay(day, id));\n      }, this);\n    }\n\n    // if (this.props.showWeekNumbers) {\n    //   week.unshift(this.renderWeekNumber(item[item.length - 1].getWeek()));\n    // }\n\n    return (\n      <View style={this.style.container}>\n        <View style={[this.style.week, this.props.style]}>{week}</View>\n      </View>\n    );\n  }\n}\n\nexport default Week;\n"]},"metadata":{},"sourceType":"script"}