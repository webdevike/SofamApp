{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Pagination = _interopRequireDefault(require(\"./Pagination.style\"));\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar PaginationDot = function (_PureComponent) {\n  (0, _inherits2.default)(PaginationDot, _PureComponent);\n\n  var _super = _createSuper(PaginationDot);\n\n  function PaginationDot(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, PaginationDot);\n    _this = _super.call(this, props);\n    _this.state = {\n      animColor: new _reactNative.Animated.Value(0),\n      animOpacity: new _reactNative.Animated.Value(0),\n      animTransform: new _reactNative.Animated.Value(0)\n    };\n    return _this;\n  }\n\n  (0, _createClass2.default)(PaginationDot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this._animate(1);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.active !== this.props.active) {\n        this._animate(this.props.active ? 1 : 0);\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var _this$state = this.state,\n          animColor = _this$state.animColor,\n          animOpacity = _this$state.animOpacity,\n          animTransform = _this$state.animTransform;\n      var _this$props = this.props,\n          animatedDuration = _this$props.animatedDuration,\n          animatedFriction = _this$props.animatedFriction,\n          animatedTension = _this$props.animatedTension;\n      var commonProperties = {\n        toValue: toValue,\n        isInteraction: false,\n        useNativeDriver: !this._shouldAnimateColor\n      };\n      var animations = [_reactNative.Animated.timing(animOpacity, _objectSpread({\n        easing: _reactNative.Easing.linear,\n        duration: animatedDuration\n      }, commonProperties)), _reactNative.Animated.spring(animTransform, _objectSpread({\n        friction: animatedFriction,\n        tension: animatedTension\n      }, commonProperties))];\n\n      if (this._shouldAnimateColor) {\n        animations.push(_reactNative.Animated.timing(animColor, _objectSpread({\n          easing: _reactNative.Easing.linear\n        }, commonProperties)));\n      }\n\n      _reactNative.Animated.parallel(animations).start();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          animColor = _this$state2.animColor,\n          animOpacity = _this$state2.animOpacity,\n          animTransform = _this$state2.animTransform;\n      var _this$props2 = this.props,\n          active = _this$props2.active,\n          activeOpacity = _this$props2.activeOpacity,\n          carouselRef = _this$props2.carouselRef,\n          color = _this$props2.color,\n          containerStyle = _this$props2.containerStyle,\n          inactiveColor = _this$props2.inactiveColor,\n          inactiveStyle = _this$props2.inactiveStyle,\n          inactiveOpacity = _this$props2.inactiveOpacity,\n          inactiveScale = _this$props2.inactiveScale,\n          index = _this$props2.index,\n          style = _this$props2.style,\n          tappable = _this$props2.tappable,\n          delayPressInDot = _this$props2.delayPressInDot;\n      var animatedStyle = {\n        opacity: animOpacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1]\n        }),\n        transform: [{\n          scale: animTransform.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inactiveScale, 1]\n          })\n        }]\n      };\n      var animatedColor = this._shouldAnimateColor ? {\n        backgroundColor: animColor.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveColor, color]\n        })\n      } : {};\n      var dotContainerStyle = [_Pagination.default.sliderPaginationDotContainer, containerStyle || {}];\n      var dotStyle = [_Pagination.default.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n      var onPress = tappable ? function () {\n        try {\n          var currentRef = carouselRef.current || carouselRef;\n\n          currentRef._snapToItem(currentRef._getPositionIndex(index));\n        } catch (error) {\n          console.warn('react-native-snap-carousel | Pagination: ' + '`carouselRef` has to be a Carousel ref.\\n' + error);\n        }\n      } : undefined;\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        accessible: false,\n        style: dotContainerStyle,\n        activeOpacity: tappable ? activeOpacity : 1,\n        onPress: onPress,\n        delayPressIn: delayPressInDot,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }\n      }, _react.default.createElement(_reactNative.Animated.View, {\n        style: dotStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 17\n        }\n      }));\n    }\n  }, {\n    key: \"_shouldAnimateColor\",\n    get: function get() {\n      var _this$props3 = this.props,\n          color = _this$props3.color,\n          inactiveColor = _this$props3.inactiveColor;\n      return color && inactiveColor;\n    }\n  }]);\n  return PaginationDot;\n}(_react.PureComponent);\n\nexports.default = PaginationDot;\nPaginationDot.propTypes = {\n  inactiveOpacity: _propTypes.default.number.isRequired,\n  inactiveScale: _propTypes.default.number.isRequired,\n  active: _propTypes.default.bool,\n  activeOpacity: _propTypes.default.number,\n  animatedDuration: _propTypes.default.number,\n  animatedFriction: _propTypes.default.number,\n  animatedTension: _propTypes.default.number,\n  carouselRef: _propTypes.default.object,\n  color: _propTypes.default.string,\n  containerStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  delayPressInDot: _propTypes.default.number,\n  inactiveColor: _propTypes.default.string,\n  inactiveStyle: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  index: _propTypes.default.number,\n  style: _reactNative.ViewPropTypes ? _reactNative.ViewPropTypes.style : _reactNative.View.propTypes.style,\n  tappable: _propTypes.default.bool\n};","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js"],"names":["PaginationDot","props","state","animColor","Animated","Value","animOpacity","animTransform","active","_animate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","duration","spring","friction","tension","push","parallel","start","activeOpacity","carouselRef","color","containerStyle","inactiveColor","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","styles","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined","PureComponent","propTypes","PropTypes","number","isRequired","bool","object","string","ViewPropTypes","View"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport { View, Animated, Easing, TouchableOpacity, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './Pagination.style';\n\nexport default class PaginationDot extends PureComponent {\n\n    static propTypes = {\n        inactiveOpacity: PropTypes.number.isRequired,\n        inactiveScale: PropTypes.number.isRequired,\n        active: PropTypes.bool,\n        activeOpacity: PropTypes.number,\n        animatedDuration: PropTypes.number,\n        animatedFriction: PropTypes.number,\n        animatedTension: PropTypes.number,\n        carouselRef: PropTypes.object,\n        color: PropTypes.string,\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        delayPressInDot: PropTypes.number,\n        inactiveColor: PropTypes.string,\n        inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        index: PropTypes.number,\n        style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        tappable: PropTypes.bool\n    };\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props;\n\n        const commonProperties = {\n            toValue,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        let animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                duration: animatedDuration,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(Animated.timing(animColor, {\n                easing: Easing.linear,\n                ...commonProperties\n            }));\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [{\n                scale: animTransform.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [inactiveScale, 1]\n                })\n            }]\n        };\n        const animatedColor = this._shouldAnimateColor ? {\n            backgroundColor: animColor.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveColor, color]\n            })\n        } : {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress = tappable ? () => {\n            try {\n                const currentRef = carouselRef.current || carouselRef;\n                currentRef._snapToItem(currentRef._getPositionIndex(index));\n            } catch (error) {\n                console.warn(\n                    'react-native-snap-carousel | Pagination: ' +\n                    '`carouselRef` has to be a Carousel ref.\\n' + error\n                );\n            }\n        } : undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n              delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"script"}