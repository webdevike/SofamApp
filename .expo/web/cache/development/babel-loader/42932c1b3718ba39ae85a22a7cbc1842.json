{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNative = require(\"react-native\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _componentUpdater = require(\"../../../component-updater\");\n\nvar _dot = _interopRequireDefault(require(\"../../dot\"));\n\nvar _style = _interopRequireDefault(require(\"./style\"));\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/calendar/day/basic/index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nvar Day = function (_Component) {\n  (0, _inherits2.default)(Day, _Component);\n\n  var _super = _createSuper(Day);\n\n  function Day(props) {\n    var _this;\n\n    (0, _classCallCheck2.default)(this, Day);\n    _this = _super.call(this, props);\n    _this.style = (0, _style.default)(props.theme);\n    _this.onDayPress = _this.onDayPress.bind((0, _assertThisInitialized2.default)(_this));\n    _this.onDayLongPress = _this.onDayLongPress.bind((0, _assertThisInitialized2.default)(_this));\n    return _this;\n  }\n\n  (0, _createClass2.default)(Day, [{\n    key: \"onDayPress\",\n    value: function onDayPress() {\n      this.props.onPress(this.props.date);\n    }\n  }, {\n    key: \"onDayLongPress\",\n    value: function onDayLongPress() {\n      this.props.onLongPress(this.props.date);\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      return (0, _componentUpdater.shouldUpdate)(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          disableAllTouchEventsForDisabledDays = _this$props.disableAllTouchEventsForDisabledDays;\n      var containerStyle = [this.style.base];\n      var textStyle = [this.style.text];\n      var marking = this.props.marking || {};\n\n      if (marking && marking.constructor === Array && marking.length) {\n        marking = {\n          marking: true\n        };\n      }\n\n      var isDisabled = typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled';\n      var isToday = this.props.state === 'today';\n      var _marking = marking,\n          marked = _marking.marked,\n          dotColor = _marking.dotColor,\n          selected = _marking.selected,\n          selectedColor = _marking.selectedColor,\n          selectedTextColor = _marking.selectedTextColor,\n          activeOpacity = _marking.activeOpacity,\n          disableTouchEvent = _marking.disableTouchEvent;\n\n      if (selected) {\n        containerStyle.push(this.style.selected);\n        textStyle.push(this.style.selectedText);\n\n        if (selectedColor) {\n          containerStyle.push({\n            backgroundColor: selectedColor\n          });\n        }\n\n        if (selectedTextColor) {\n          textStyle.push({\n            color: selectedTextColor\n          });\n        }\n      } else if (isDisabled) {\n        textStyle.push(this.style.disabledText);\n      } else if (isToday) {\n        containerStyle.push(this.style.today);\n        textStyle.push(this.style.todayText);\n      }\n\n      var shouldDisableTouchEvent = false;\n\n      if (typeof disableTouchEvent === 'boolean') {\n        shouldDisableTouchEvent = disableTouchEvent;\n      } else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && isDisabled) {\n        shouldDisableTouchEvent = disableAllTouchEventsForDisabledDays;\n      }\n\n      return _react.default.createElement(_reactNative.TouchableOpacity, {\n        testID: this.props.testID,\n        style: containerStyle,\n        onPress: this.onDayPress,\n        onLongPress: this.onDayLongPress,\n        activeOpacity: activeOpacity,\n        disabled: shouldDisableTouchEvent,\n        accessibilityRole: isDisabled ? undefined : 'button',\n        accessibilityLabel: this.props.accessibilityLabel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, _react.default.createElement(_reactNative.Text, {\n        allowFontScaling: false,\n        style: textStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }\n      }, String(this.props.children)), _react.default.createElement(_dot.default, {\n        theme: theme,\n        isMarked: marked,\n        dotColor: dotColor,\n        isSelected: selected,\n        isToday: isToday,\n        isDisabled: isDisabled,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n  return Day;\n}(_react.Component);\n\nDay.displayName = 'IGNORE';\nDay.propTypes = {\n  state: _propTypes.default.oneOf(['disabled', 'today', '']),\n  theme: _propTypes.default.object,\n  marking: _propTypes.default.any,\n  onPress: _propTypes.default.func,\n  onLongPress: _propTypes.default.func,\n  date: _propTypes.default.object,\n  disableAllTouchEventsForDisabledDays: _propTypes.default.bool\n};\nvar _default = Day;\nexports.default = _default;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/node_modules/react-native-calendars/src/calendar/day/basic/index.js"],"names":["Day","props","style","theme","onDayPress","bind","onDayLongPress","onPress","date","onLongPress","nextProps","disableAllTouchEventsForDisabledDays","containerStyle","base","textStyle","text","marking","constructor","Array","length","isDisabled","disabled","state","isToday","marked","dotColor","selected","selectedColor","selectedTextColor","activeOpacity","disableTouchEvent","push","selectedText","backgroundColor","color","disabledText","today","todayText","shouldDisableTouchEvent","testID","undefined","accessibilityLabel","String","children","Component","displayName","propTypes","PropTypes","oneOf","object","any","func","bool"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {TouchableOpacity, Text} from 'react-native';\nimport PropTypes from 'prop-types';\nimport {shouldUpdate} from '../../../component-updater';\nimport Dot from '../../dot';\nimport styleConstructor from './style';\n\n\nclass Day extends Component {\n  static displayName = 'IGNORE';\n\n  static propTypes = {\n    // TODO: disabled props should be removed\n    state: PropTypes.oneOf(['disabled', 'today', '']),\n    // Specify theme properties to override specific styles for calendar parts. Default = {}\n    theme: PropTypes.object,\n    marking: PropTypes.any,\n    onPress: PropTypes.func,\n    onLongPress: PropTypes.func,\n    date: PropTypes.object,\n    disableAllTouchEventsForDisabledDays: PropTypes.bool\n  };\n\n  constructor(props) {\n    super(props);\n    this.style = styleConstructor(props.theme);\n\n    this.onDayPress = this.onDayPress.bind(this);\n    this.onDayLongPress = this.onDayLongPress.bind(this);\n  }\n\n  onDayPress() {\n    this.props.onPress(this.props.date);\n  }\n  onDayLongPress() {\n    this.props.onLongPress(this.props.date);\n  }\n\n  shouldComponentUpdate(nextProps) {\n    return shouldUpdate(this.props, nextProps, ['state', 'children', 'marking', 'onPress', 'onLongPress']);\n  }\n\n  render() {\n    const {theme, disableAllTouchEventsForDisabledDays} = this.props;\n    const containerStyle = [this.style.base];\n    const textStyle = [this.style.text];\n\n    let marking = this.props.marking || {};\n    if (marking && marking.constructor === Array && marking.length) {\n      marking = {\n        marking: true\n      };\n    }\n\n    const isDisabled = typeof marking.disabled !== 'undefined' ? marking.disabled : this.props.state === 'disabled';\n    const isToday = this.props.state === 'today';\n\n    const {\n      marked,\n      dotColor,\n      selected,\n      selectedColor,\n      selectedTextColor,\n      activeOpacity,\n      disableTouchEvent\n    } = marking;\n\n    if (selected) {\n      containerStyle.push(this.style.selected);\n      textStyle.push(this.style.selectedText);\n\n      if (selectedColor) {\n        containerStyle.push({backgroundColor: selectedColor});\n      }\n\n      if (selectedTextColor) {\n        textStyle.push({color: selectedTextColor});\n      }\n\n    } else if (isDisabled) {\n      textStyle.push(this.style.disabledText);\n    } else if (isToday) {\n      containerStyle.push(this.style.today);\n      textStyle.push(this.style.todayText);\n    }\n\n    let shouldDisableTouchEvent = false;\n    if (typeof disableTouchEvent === 'boolean') {\n      shouldDisableTouchEvent = disableTouchEvent;\n    } else if (typeof disableAllTouchEventsForDisabledDays === 'boolean' && isDisabled) {\n      shouldDisableTouchEvent = disableAllTouchEventsForDisabledDays;\n    }\n\n    return (\n      <TouchableOpacity\n        testID={this.props.testID}\n        style={containerStyle}\n        onPress={this.onDayPress}\n        onLongPress={this.onDayLongPress}\n        activeOpacity={activeOpacity}\n        disabled={shouldDisableTouchEvent}\n        accessibilityRole={isDisabled ? undefined : 'button'}\n        accessibilityLabel={this.props.accessibilityLabel}\n      >\n        <Text allowFontScaling={false} style={textStyle}>{String(this.props.children)}</Text>\n        <Dot\n          theme={theme}\n          isMarked={marked}\n          dotColor={dotColor}\n          isSelected={selected}\n          isToday={isToday}\n          isDisabled={isDisabled}\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n\nexport default Day;\n"]},"metadata":{},"sourceType":"script"}