{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.NAVIGATION_PERSISTENCE_KEY = void 0;\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nrequire(\"./i18n\");\n\nrequire(\"./utils/ignore-warnings\");\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactNativeSafeAreaContext = require(\"react-native-safe-area-context\");\n\nvar _fonts = require(\"./theme/fonts\");\n\nvar storage = _interopRequireWildcard(require(\"./utils/storage\"));\n\nvar _navigation = require(\"./navigation\");\n\nvar _models = require(\"./models\");\n\nvar _client = require(\"@apollo/client\");\n\nvar _context4 = require(\"@apollo/client/link/context\");\n\nvar _cache = require(\"./cache\");\n\nvar Minio = _interopRequireWildcard(require(\"minio\"));\n\nvar _reactNativeScreens = require(\"react-native-screens\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/app/app.tsx\";\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"{isLoggedIn @client}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n(0, _reactNativeScreens.enableScreens)();\nvar NAVIGATION_PERSISTENCE_KEY = \"NAVIGATION_STATE\";\nexports.NAVIGATION_PERSISTENCE_KEY = NAVIGATION_PERSISTENCE_KEY;\nvar minioClient = new Minio.Client({\n  endPoint: '192.168.1.196',\n  port: 9001,\n  useSSL: false,\n  accessKey: 'minioadmin',\n  secretKey: 'minioadmin'\n});\nvar stream = minioClient.listObjectsV2('sofam', '', true, '');\nstream.on('data', function (obj) {\n  console.log(obj);\n});\nstream.on('error', function (err) {\n  console.log(err);\n});\n\nvar App = function App() {\n  var navigationRef = (0, _react.useRef)();\n\n  var _useState = (0, _react.useState)(undefined),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      rootStore = _useState2[0],\n      setRootStore = _useState2[1];\n\n  (0, _navigation.setRootNavigation)(navigationRef);\n  (0, _navigation.useBackButtonHandler)(navigationRef, _navigation.canExit);\n\n  var _useNavigationPersist = (0, _navigation.useNavigationPersistence)(storage, NAVIGATION_PERSISTENCE_KEY),\n      initialNavigationState = _useNavigationPersist.initialNavigationState,\n      onNavigationStateChange = _useNavigationPersist.onNavigationStateChange;\n\n  var httpLink = (0, _client.createHttpLink)({\n    uri: 'https://sofam-api.ikey2244.vercel.app/graphql'\n  });\n  var authLink = (0, _context4.setContext)(function _callee(_, _ref) {\n    var headers, token;\n    return _regenerator.default.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            headers = _ref.headers;\n            _context.next = 3;\n            return _regenerator.default.awrap((0, storage.loadString)(\"@authToken\"));\n\n          case 3:\n            token = _context.sent;\n            return _context.abrupt(\"return\", {\n              headers: _objectSpread(_objectSpread({}, headers), {}, {\n                authorization: token ? \"Bearer \" + token : \"\"\n              })\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  var checkAuth = function checkAuth() {\n    return _regenerator.default.async(function checkAuth$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.t0 = _cache.cache;\n            _context2.t1 = (0, _client.gql)(_templateObject());\n            _context2.next = 4;\n            return _regenerator.default.awrap(!!(0, storage.loadString)(\"@authToken\"));\n\n          case 4:\n            _context2.t2 = _context2.sent;\n            _context2.t3 = {\n              isLoggedIn: _context2.t2\n            };\n            _context2.t4 = {\n              query: _context2.t1,\n              data: _context2.t3\n            };\n\n            _context2.t0.writeQuery.call(_context2.t0, _context2.t4);\n\n          case 8:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  (0, _react.useEffect)(function () {\n    ;\n\n    (function _callee2() {\n      return _regenerator.default.async(function _callee2$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regenerator.default.awrap(checkAuth());\n\n            case 2:\n              _context3.next = 4;\n              return _regenerator.default.awrap((0, _fonts.initFonts)());\n\n            case 4:\n              (0, _models.setupRootStore)().then(setRootStore);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n  if (!rootStore) return null;\n  var client = new _client.ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: _cache.cache\n  });\n  return _react.default.createElement(_client.ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_models.RootStoreProvider, {\n    value: rootStore,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNativeSafeAreaContext.SafeAreaProvider, {\n    initialSafeAreaInsets: _reactNativeSafeAreaContext.initialWindowSafeAreaInsets,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_navigation.RootNavigator, {\n    ref: navigationRef,\n    initialState: initialNavigationState,\n    onStateChange: onNavigationStateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar _default = App;\nexports.default = _default;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/app.tsx"],"names":["NAVIGATION_PERSISTENCE_KEY","minioClient","Minio","Client","endPoint","port","useSSL","accessKey","secretKey","stream","listObjectsV2","on","obj","console","log","err","App","navigationRef","undefined","rootStore","setRootStore","canExit","storage","initialNavigationState","onNavigationStateChange","httpLink","uri","authLink","_","headers","token","authorization","checkAuth","cache","gql","isLoggedIn","query","data","writeQuery","then","client","ApolloClient","link","concat","initialWindowSafeAreaInsets"],"mappings":"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","sourcesContent":["import \"./i18n\"\nimport \"./utils/ignore-warnings\"\nimport React, { useState, useEffect, useRef, FunctionComponent as Component } from \"react\"\nimport { NavigationContainerRef } from \"@react-navigation/native\"\nimport { SafeAreaProvider, initialWindowSafeAreaInsets } from \"react-native-safe-area-context\"\n\nimport { initFonts } from \"./theme/fonts\"\nimport * as storage from \"./utils/storage\"\nimport {\n  useBackButtonHandler,\n  RootNavigator,\n  canExit,\n  setRootNavigation,\n  useNavigationPersistence,\n} from \"./navigation\"\nimport { RootStore, RootStoreProvider, setupRootStore } from \"./models\"\nimport { ApolloClient, ApolloProvider, gql, createHttpLink } from \"@apollo/client\"\nimport { setContext } from '@apollo/client/link/context'\nimport { cache } from './cache'\nimport * as Minio from 'minio'\n\n// This puts screens in a native ViewController or Activity. If you want fully native\n// stack navigation, use `createNativeStackNavigator` in place of `createStackNavigator`:\n// https://github.com/kmagiera/react-native-screens#using-native-stack-navigator\nimport { enableScreens } from \"react-native-screens\"\nimport { loadString } from \"./utils/storage\"\nenableScreens()\n\nexport const NAVIGATION_PERSISTENCE_KEY = \"NAVIGATION_STATE\"\n\nconst minioClient = new Minio.Client({\n  endPoint: '192.168.1.196',\n  port: 9001,\n  useSSL: false,\n  accessKey: 'minioadmin',\n  secretKey: 'minioadmin'\n})\n\nconst stream = minioClient.listObjectsV2('sofam', '', true, '')\nstream.on('data', function (obj) {\n  console.log(obj)\n})\nstream.on('error', function (err) {\n  console.log(err)\n})\n\n/**\n * This is the root component of our app.\n */\nconst App: Component<{}> = () => {\n  const navigationRef = useRef<NavigationContainerRef>()\n  const [rootStore, setRootStore] = useState<RootStore | undefined>(undefined)\n\n  setRootNavigation(navigationRef)\n  useBackButtonHandler(navigationRef, canExit)\n  const { initialNavigationState, onNavigationStateChange } = useNavigationPersistence(\n    storage,\n    NAVIGATION_PERSISTENCE_KEY,\n  )\n\n  const httpLink = createHttpLink({\n    uri: 'https://sofam-api.ikey2244.vercel.app/graphql',\n  })\n\n  const authLink = setContext(async (_, { headers }) => {\n    const token = await loadString(\"@authToken\")\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      }\n    }\n  })\n\n  const checkAuth = async () => {\n    cache.writeQuery({\n      query: gql`{isLoggedIn @client}`,\n      data: {\n        isLoggedIn: await !!loadString(\"@authToken\"),\n      },\n    })\n  }\n\n  // Kick off initial async loading actions, like loading fonts and RootStore\n  useEffect(() => {\n    ; (async () => {\n      await checkAuth()\n      await initFonts()\n      setupRootStore().then(setRootStore)\n    })()\n  }, [])\n\n  // Before we show the app, we have to wait for our state to be ready.\n  // In the meantime, don't render anything. This will be the background\n  // color set in native by rootView's background color. You can replace\n  // with your own loading component if you wish.\n  if (!rootStore) return null\n\n  const client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache\n  })\n\n  // otherwise, we're ready to render the app\n  return (\n    <ApolloProvider client={client}>\n      <RootStoreProvider value={rootStore}>\n        <SafeAreaProvider initialSafeAreaInsets={initialWindowSafeAreaInsets}>\n          <RootNavigator\n            ref={navigationRef}\n            initialState={initialNavigationState}\n            onStateChange={onNavigationStateChange}\n          />\n        </SafeAreaProvider>\n      </RootStoreProvider>\n    </ApolloProvider>\n  )\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"script"}