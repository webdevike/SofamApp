{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RootNavigator = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _primaryNavigator = require(\"./primary-navigator\");\n\nvar _authNavigator = require(\"./auth-navigator\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/app/navigation/root-navigator.tsx\";\nvar Stack = (0, _stack.createStackNavigator)();\nvar user = false;\n\nvar RootStack = function RootStack() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"primaryStack\",\n    component: _primaryNavigator.PrimaryNavigator,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AuthStack = function AuthStack() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"authStack\",\n    component: _authNavigator.AuthNavigator,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar RootNavigator = _react.default.forwardRef(function (props, ref) {\n  return _react.default.createElement(_native.NavigationContainer, (0, _extends2.default)({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), user ? _react.default.createElement(RootStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }) : _react.default.createElement(AuthStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 31\n    }\n  }));\n});\n\nexports.RootNavigator = RootNavigator;\nRootNavigator.displayName = \"RootNavigator\";","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/navigation/root-navigator.tsx"],"names":["Stack","user","RootStack","headerShown","gestureEnabled","PrimaryNavigator","AuthStack","AuthNavigator","RootNavigator","React","forwardRef","props","ref","displayName"],"mappings":";;;;;;;;;AAMA;;AACA;;AACA;;AACA;;AACA;;;AAiBA,IAAMA,KAAK,GAAG,kCAAd;AAEA,IAAMC,IAAI,GAAG,KAAb;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SACE,6BAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,cAAc,EAAE;AAFH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAEC,kCAFb;AAGE,IAAA,OAAO,EAAE;AACPF,MAAAA,WAAW,EAAE;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAgBD,CAjBD;;AAmBA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SACE,6BAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbH,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,cAAc,EAAE;AAFH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEG,4BAFb;AAGE,IAAA,OAAO,EAAE;AACPJ,MAAAA,WAAW,EAAE;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAgBD,CAjBD;;AAmBO,IAAMK,aAAa,GAAGC,eAAMC,UAAN,CAG3B,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAChB,SACE,6BAAC,2BAAD,6BAAyBD,KAAzB;AAAgC,IAAA,GAAG,EAAEC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGX,IAAI,GAAG,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmB,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1B,CADF;AAKD,CAT4B,CAAtB;;;AAWPO,aAAa,CAACK,WAAd,GAA4B,eAA5B","sourcesContent":["/**\n * The root navigator is used to switch between major navigation flows of your app.\n * Generally speaking, it will contain an auth flow (registration, login, forgot password)\n * and a \"main\" flow (which is contained in your PrimaryNavigator) which the user\n * will use once logged in.\n */\nimport React from \"react\"\nimport { NavigationContainer, NavigationContainerRef } from \"@react-navigation/native\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport { PrimaryNavigator } from \"./primary-navigator\"\nimport { AuthNavigator } from \"./auth-navigator\"\n\n/**\n * This type allows TypeScript to know what routes are defined in this navigator\n * as well as what properties (if any) they might take when navigating to them.\n *\n * We recommend using MobX-State-Tree store(s) to handle state rather than navigation params.\n *\n * For more information, see this documentation:\n *   https://reactnavigation.org/docs/params/\n *   https://reactnavigation.org/docs/typescript#type-checking-the-navigator\n */\nexport type RootParamList = {\n  primaryStack: undefined\n  authStack: undefined\n}\n\nconst Stack = createStackNavigator<RootParamList>()\n\nconst user = false\n\nconst RootStack = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        gestureEnabled: true,\n      }}\n    >\n      <Stack.Screen\n        name=\"primaryStack\"\n        component={PrimaryNavigator}\n        options={{\n          headerShown: false,\n        }}\n      />\n    </Stack.Navigator>\n  )\n}\n\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        gestureEnabled: true,\n      }}\n    >\n      <Stack.Screen\n        name=\"authStack\"\n        component={AuthNavigator}\n        options={{\n          headerShown: false,\n        }}\n      />\n    </Stack.Navigator>\n  )\n}\n\nexport const RootNavigator = React.forwardRef<\n  NavigationContainerRef,\n  Partial<React.ComponentProps<typeof NavigationContainer>>\n>((props, ref) => {\n  return (\n    <NavigationContainer {...props} ref={ref}>\n      {user ? <RootStack /> : <AuthStack/>}\n    </NavigationContainer>\n  )\n})\n\nRootNavigator.displayName = \"RootNavigator\"\n"]},"metadata":{},"sourceType":"script"}