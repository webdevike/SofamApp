{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.clear = clear$3;\nexports.set = set$3;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it; if (typeof Symbol === \"undefined\" || o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"] == null) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } it = o[typeof Symbol === \"function\" ? Symbol.iterator : \"@@iterator\"](); return it.next.bind(it); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar warnedBefore = false;\n\nvar warn = function warn() {\n  if (warnedBefore) {\n    return;\n  }\n\n  if ('ExperimentalBadge' in window || 'setExperimentalAppBadge' in navigator) {\n    return;\n  }\n\n  console.warn('Badging API must be enabled. Please check here how you can enable it: https://developers.google.com/web/updates/2018/12/badging-api#use');\n  warnedBefore = true;\n};\n\nvar current = {\n  mediaQuery: null,\n  value: 0\n};\n\nfunction isVersion1Available() {\n  return 'ExperimentalBadge' in window && !!window.ExperimentalBadge;\n}\n\nfunction isVersion2Available() {\n  return 'setExperimentalAppBadge' in navigator && !!navigator.setExperimentalAppBadge && 'clearExperimentalAppBadge' in navigator && !!navigator.clearExperimentalAppBadge;\n}\n\nfunction isAvailable() {\n  if (!current.mediaQuery) {\n    current.mediaQuery = window.matchMedia('(display-mode: standalone)');\n\n    current.mediaQuery.onchange = function (event) {\n      set(current.value);\n    };\n  }\n\n  return current.mediaQuery.matches && (isVersion1Available() || isVersion2Available());\n}\n\nfunction set(value) {\n  current.value = value;\n\n  if (!isAvailable()) {\n    warn();\n    return false;\n  }\n\n  if (isVersion1Available()) {\n    window.ExperimentalBadge.set(value);\n    return true;\n  } else if (isVersion2Available()) {\n    navigator.setExperimentalAppBadge(value);\n    return true;\n  }\n\n  return false;\n}\n\nfunction clear() {\n  if (!isAvailable()) {\n    return;\n  }\n\n  if (isVersion1Available()) {\n    window.ExperimentalBadge.clear();\n  } else if (isVersion2Available()) {\n    navigator.clearExperimentalAppBadge();\n  }\n}\n\nfunction deepMerge(target, source) {\n  for (var _i = 0, _Object$keys = Object.keys(source); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    if (source[key] instanceof Object) (0, _extends2.default)(source[key], deepMerge(target[key], source[key]));\n  }\n\n  (0, _extends2.default)(target || {}, source);\n  return target;\n}\n\nfunction isPositiveNumber(value) {\n  return typeof value !== 'undefined' && Number.isInteger(value) && value >= 0;\n}\n\nvar DefaultValue = 0;\nvar DefaultOptions = {\n  backgroundColor: '#424242',\n  color: '#ffffff',\n  indicator: '!',\n  radius: 3,\n  size: 7,\n  horizontalMargin: 0,\n  verticalMargin: 0,\n  horizontalPadding: 1,\n  verticalPadding: 1\n};\nvar isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\n\nvar getFavicons = function getFavicons() {\n  var links = document.head.getElementsByTagName('link');\n  var favicons = [];\n\n  for (var i = 0; i < links.length; i++) {\n    var link = links[i];\n    var href = link.getAttribute('href');\n    var rel = link.getAttribute('rel');\n\n    if (!href) {\n      continue;\n    }\n\n    if (!rel) {\n      continue;\n    }\n\n    if (rel.split(' ').indexOf('icon') === -1) {\n      continue;\n    }\n\n    favicons.push(link);\n  }\n\n  return favicons;\n};\n\nvar getBestFavicon = function getBestFavicon() {\n  var favicons = getFavicons();\n  var bestFavicon = null;\n  var bestSize = 0;\n\n  for (var i = 0; i < favicons.length; i++) {\n    var favicon = favicons[i];\n    var href = favicon.getAttribute('href');\n    var sizes = favicon.getAttribute('sizes');\n\n    if (href === null || href === void 0 ? void 0 : href.endsWith('.svg')) {\n      return favicon;\n    }\n\n    if (!sizes) {\n      if (!bestFavicon) {\n        bestFavicon = favicon;\n        bestSize = 0;\n      }\n\n      continue;\n    }\n\n    if (sizes === 'any') {\n      return favicon;\n    }\n\n    var size = parseInt(sizes.split('x')[0], 10);\n\n    if (Number.isNaN(size)) {\n      if (!bestFavicon) {\n        bestFavicon = favicon;\n        bestSize = 0;\n      }\n\n      continue;\n    }\n\n    if (size > bestSize) {\n      bestFavicon = favicon;\n      bestSize = size;\n      continue;\n    }\n  }\n\n  return bestFavicon;\n};\n\nvar current$1 = {\n  favicons: null,\n  bestFavicon: null,\n  bestFaviconImage: null,\n  value: DefaultValue,\n  options: DefaultOptions\n};\nvar devicePixelRatioListener = window.matchMedia('screen and (min-resolution: 2dppx)');\n\nvar getRatio = function getRatio() {\n  return Math.ceil(window.devicePixelRatio) || 1;\n};\n\nvar handleRatioChange = function handleRatioChange() {\n  set$1(current$1.value, current$1.options);\n};\n\nvar getIconSize = function getIconSize() {\n  return 16 * getRatio();\n};\n\nvar setFavicon = function setFavicon(url) {\n  if (!url) {\n    return;\n  }\n\n  for (var _iterator = _createForOfIteratorHelperLoose(getFavicons()), _step; !(_step = _iterator()).done;) {\n    var favicon = _step.value;\n\n    if (favicon.parentNode) {\n      favicon.parentNode.removeChild(favicon);\n    }\n  }\n\n  var newFavicon = document.createElement('link');\n  newFavicon.id = 'badgin';\n  newFavicon.type = 'image/x-icon';\n  newFavicon.rel = 'icon favicon';\n  newFavicon.href = url;\n  document.getElementsByTagName('head')[0].appendChild(newFavicon);\n};\n\nvar drawFavicon = function drawFavicon(image, value, options) {\n  var iconSize = getIconSize();\n  var canvas = document.createElement('canvas');\n  canvas.width = iconSize;\n  canvas.height = iconSize;\n  var context = canvas.getContext('2d');\n\n  if (!context) {\n    return;\n  }\n\n  image.width = iconSize;\n  image.height = iconSize;\n  context.drawImage(image, 0, 0, image.width, image.height);\n  drawBubble(context, value, options);\n  setFavicon(canvas.toDataURL());\n};\n\nvar drawBubble = function drawBubble(context, value, options) {\n  var ratio = getRatio();\n  var iconSize = getIconSize();\n  var finalValue = '';\n\n  if (isPositiveNumber(value)) {\n    if (value === 0) {\n      finalValue = '';\n    } else if (value < 100) {\n      finalValue = String(value);\n    } else {\n      finalValue = '99+';\n    }\n  } else {\n    finalValue = options.indicator;\n  }\n\n  if (!finalValue) {\n    return;\n  }\n\n  var textHeight = options.size - 2;\n  var font = options.size * ratio + \"px Arial\";\n  context.font = font;\n\n  var _context$measureText = context.measureText(finalValue),\n      textWidth = _context$measureText.width;\n\n  context.restore();\n  var width = textWidth + 2 * options.horizontalPadding;\n  var height = textHeight * ratio + 2 * options.verticalPadding;\n  var top = iconSize - height - options.verticalMargin;\n  var left = iconSize - width - options.horizontalMargin;\n  var bottom = 16 * ratio - options.verticalMargin;\n  var right = 16 * ratio - options.horizontalMargin;\n  var radius = options.radius;\n  context.globalAlpha = 1;\n  context.fillStyle = options.backgroundColor;\n  context.strokeStyle = options.backgroundColor;\n  context.lineWidth = 0;\n  context.beginPath();\n  context.moveTo(left + radius, top);\n  context.quadraticCurveTo(left, top, left, top + radius);\n  context.lineTo(left, bottom - radius);\n  context.quadraticCurveTo(left, bottom, left + radius, bottom);\n  context.lineTo(right - radius, bottom);\n  context.quadraticCurveTo(right, bottom, right, bottom - radius);\n  context.lineTo(right, top + radius);\n  context.quadraticCurveTo(right, top, right - radius, top);\n  context.closePath();\n  context.fill();\n  context.save();\n  context.font = font;\n  context.fillStyle = options.color;\n  context.textAlign = 'center';\n  context.textBaseline = 'hanging';\n  context.fillText(finalValue, left + width / 2, top + options.verticalPadding + (isFirefox ? 1 : 0));\n  context.save();\n};\n\nfunction isAvailable$1() {\n  return !!getBestFavicon();\n}\n\nfunction set$1(value, options) {\n  current$1.value = value;\n  deepMerge(current$1.options, options || {});\n\n  if (!isAvailable$1()) {\n    return false;\n  }\n\n  if (!current$1.bestFavicon) {\n    var bestFavicon = getBestFavicon();\n\n    if (bestFavicon) {\n      var bestFaviconImage = document.createElement('img');\n\n      if (!bestFavicon.href.match(/^data/)) {\n        bestFaviconImage.crossOrigin = 'anonymous';\n      }\n\n      bestFaviconImage.src = bestFavicon.href;\n      current$1.bestFavicon = bestFavicon;\n      current$1.bestFaviconImage = bestFaviconImage;\n    }\n\n    devicePixelRatioListener.addEventListener('change', handleRatioChange);\n  }\n\n  if (!current$1.favicons) {\n    current$1.favicons = getFavicons();\n  }\n\n  if (!current$1.bestFaviconImage) {\n    return false;\n  }\n\n  if (current$1.bestFaviconImage.complete) {\n    drawFavicon(current$1.bestFaviconImage, current$1.value, current$1.options);\n    return true;\n  }\n\n  current$1.bestFaviconImage.addEventListener('load', function () {\n    drawFavicon(this, current$1.value, current$1.options);\n  });\n  return true;\n}\n\nfunction clear$1() {\n  if (!isAvailable$1()) {\n    return;\n  }\n\n  current$1.value = DefaultValue;\n  current$1.options = DefaultOptions;\n  devicePixelRatioListener.removeEventListener('change', handleRatioChange);\n\n  if (current$1.favicons) {\n    for (var _iterator2 = _createForOfIteratorHelperLoose(getFavicons()), _step2; !(_step2 = _iterator2()).done;) {\n      var favicon = _step2.value;\n\n      if (favicon.parentNode) {\n        favicon.parentNode.removeChild(favicon);\n      }\n    }\n\n    for (var _iterator3 = _createForOfIteratorHelperLoose(current$1.favicons), _step3; !(_step3 = _iterator3()).done;) {\n      var _favicon = _step3.value;\n      document.head.appendChild(_favicon);\n    }\n\n    current$1.favicons = null;\n    current$1.bestFavicon = null;\n    current$1.bestFaviconImage = null;\n  }\n}\n\nvar defaultOptions = {\n  indicator: '!'\n};\nvar current$2 = {\n  title: null,\n  value: 0,\n  options: defaultOptions\n};\n\nfunction changeTitle(title, value, options) {\n  var newTitle = title;\n\n  if (isPositiveNumber(value)) {\n    if (value === 0) {\n      newTitle = title;\n    } else {\n      newTitle = \"(\" + value + \") \" + title;\n    }\n  } else {\n    newTitle = \"(\" + options.indicator + \") \" + title;\n  }\n\n  var element = document.querySelector('title');\n\n  if (element) {\n    element.childNodes[0].nodeValue = newTitle;\n  }\n}\n\nfunction set$2(value, options) {\n  if (current$2.title === null) {\n    current$2.title = document.title;\n    Object.defineProperty(document, 'title', {\n      get: function get() {\n        return current$2.title;\n      },\n      set: function set(title) {\n        current$2.title = title;\n        changeTitle(current$2.title, current$2.value, current$2.options);\n      }\n    });\n  }\n\n  current$2.value = value;\n  deepMerge(current$2.options, options || {});\n  document.title = document.title;\n  return true;\n}\n\nfunction clear$2() {\n  current$2.value = 0;\n  document.title = document.title;\n}\n\nfunction set$3(value) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  switch (options.method) {\n    case undefined:\n    case 'Badging':\n      {\n        if (set(value)) {\n          if (options.method === 'Badging') {\n            break;\n          }\n        }\n      }\n\n    case 'Favicon':\n      {\n        if (set$1(value, options.favicon)) {\n          break;\n        }\n      }\n\n    default:\n      {\n        set$2(value, options.title);\n      }\n  }\n}\n\nfunction clear$3() {\n  clear();\n  clear$1();\n  clear$2();\n}","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/node_modules/expo-notifications/node_modules/badgin/build/index.es.js"],"names":["warnedBefore","warn","window","navigator","console","current","mediaQuery","value","isVersion1Available","ExperimentalBadge","isVersion2Available","setExperimentalAppBadge","clearExperimentalAppBadge","isAvailable","matchMedia","onchange","event","set","matches","clear","deepMerge","target","source","Object","keys","key","isPositiveNumber","Number","isInteger","DefaultValue","DefaultOptions","backgroundColor","color","indicator","radius","size","horizontalMargin","verticalMargin","horizontalPadding","verticalPadding","isFirefox","userAgent","indexOf","getFavicons","links","document","head","getElementsByTagName","favicons","i","length","link","href","getAttribute","rel","split","push","getBestFavicon","bestFavicon","bestSize","favicon","sizes","endsWith","parseInt","isNaN","current$1","bestFaviconImage","options","devicePixelRatioListener","getRatio","Math","ceil","devicePixelRatio","handleRatioChange","set$1","getIconSize","setFavicon","url","parentNode","removeChild","newFavicon","createElement","id","type","appendChild","drawFavicon","image","iconSize","canvas","width","height","context","getContext","drawImage","drawBubble","toDataURL","ratio","finalValue","String","textHeight","font","measureText","textWidth","restore","top","left","bottom","right","globalAlpha","fillStyle","strokeStyle","lineWidth","beginPath","moveTo","quadraticCurveTo","lineTo","closePath","fill","save","textAlign","textBaseline","fillText","isAvailable$1","match","crossOrigin","src","addEventListener","complete","clear$1","removeEventListener","defaultOptions","current$2","title","changeTitle","newTitle","element","querySelector","childNodes","nodeValue","set$2","defineProperty","get","clear$2","set$3","method","undefined","clear$3"],"mappings":"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","sourcesContent":["let warnedBefore = false;\r\nconst warn = () => {\r\n    if (warnedBefore) {\r\n        return;\r\n    }\r\n    // We will only warn the user if the Badging API is not available at all\r\n    if ('ExperimentalBadge' in window || 'setExperimentalAppBadge' in navigator) {\r\n        return;\r\n    }\r\n    console.warn('Badging API must be enabled. Please check here how you can enable it: https://developers.google.com/web/updates/2018/12/badging-api#use');\r\n    warnedBefore = true;\r\n};\r\nconst current = {\r\n    mediaQuery: null,\r\n    value: 0,\r\n};\r\nfunction isVersion1Available() {\r\n    return 'ExperimentalBadge' in window && !!window.ExperimentalBadge;\r\n}\r\nfunction isVersion2Available() {\r\n    return ('setExperimentalAppBadge' in navigator &&\r\n        !!navigator.setExperimentalAppBadge &&\r\n        'clearExperimentalAppBadge' in navigator &&\r\n        !!navigator.clearExperimentalAppBadge);\r\n}\r\nfunction isAvailable() {\r\n    if (!current.mediaQuery) {\r\n        current.mediaQuery = window.matchMedia('(display-mode: standalone)');\r\n        // Get notified once app is installed\r\n        current.mediaQuery.onchange = event => {\r\n            set(current.value);\r\n        };\r\n    }\r\n    return (current.mediaQuery.matches &&\r\n        (isVersion1Available() || isVersion2Available()));\r\n}\r\nfunction set(value) {\r\n    current.value = value;\r\n    if (!isAvailable()) {\r\n        warn();\r\n        return false;\r\n    }\r\n    // Sets the badge to contents (an integer), or to \"flag\" if contents is omitted. If contents is 0, clears the badge for the matching app(s).\r\n    // See details here: https://github.com/WICG/badging/blob/master/explainer.md#the-api\r\n    if (isVersion1Available()) {\r\n        window.ExperimentalBadge.set(value);\r\n        return true;\r\n    }\r\n    else if (isVersion2Available()) {\r\n        navigator.setExperimentalAppBadge(value);\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nfunction clear() {\r\n    if (!isAvailable()) {\r\n        return;\r\n    }\r\n    if (isVersion1Available()) {\r\n        window.ExperimentalBadge.clear();\r\n    }\r\n    else if (isVersion2Available()) {\r\n        navigator.clearExperimentalAppBadge();\r\n    }\r\n}\n\nfunction deepMerge(target, source) {\r\n    // Iterate through `source` properties and if an `Object` set property to merge of `target` and `source` properties\r\n    for (const key of Object.keys(source)) {\r\n        if (source[key] instanceof Object)\r\n            Object.assign(source[key], deepMerge(target[key], source[key]));\r\n    }\r\n    // Join `target` and modified `source`\r\n    Object.assign(target || {}, source);\r\n    return target;\r\n}\n\nfunction isPositiveNumber(value) {\r\n    return (typeof value !== 'undefined' && Number.isInteger(value) && value >= 0);\r\n}\n\nconst DefaultValue = 0;\r\nconst DefaultOptions = {\r\n    backgroundColor: '#424242',\r\n    color: '#ffffff',\r\n    indicator: '!',\r\n    radius: 3,\r\n    size: 7,\r\n    horizontalMargin: 0,\r\n    verticalMargin: 0,\r\n    horizontalPadding: 1,\r\n    verticalPadding: 1,\r\n};\r\nconst isFirefox = navigator.userAgent.indexOf('Firefox') > -1;\r\n// Get all favicons of the page\r\nconst getFavicons = () => {\r\n    const links = document.head.getElementsByTagName('link');\r\n    const favicons = [];\r\n    for (let i = 0; i < links.length; i++) {\r\n        const link = links[i];\r\n        const href = link.getAttribute('href');\r\n        const rel = link.getAttribute('rel');\r\n        if (!href) {\r\n            continue;\r\n        }\r\n        if (!rel) {\r\n            continue;\r\n        }\r\n        if (rel.split(' ').indexOf('icon') === -1) {\r\n            continue;\r\n        }\r\n        favicons.push(link);\r\n    }\r\n    return favicons;\r\n};\r\n// Get the favicon with the best quality of the document\r\nconst getBestFavicon = () => {\r\n    const favicons = getFavicons();\r\n    let bestFavicon = null;\r\n    let bestSize = 0;\r\n    for (let i = 0; i < favicons.length; i++) {\r\n        const favicon = favicons[i];\r\n        const href = favicon.getAttribute('href');\r\n        const sizes = favicon.getAttribute('sizes');\r\n        // If the href looks like it's an SVG, it's the best we can get\r\n        if (href === null || href === void 0 ? void 0 : href.endsWith('.svg')) {\r\n            return favicon;\r\n        }\r\n        // If the link does not have a \"sizes\" attribute, we use it only if we haven't found anything else yet\r\n        if (!sizes) {\r\n            if (!bestFavicon) {\r\n                bestFavicon = favicon;\r\n                bestSize = 0;\r\n            }\r\n            continue;\r\n        }\r\n        // If we find an icon with sizes \"any\", it's the best we can get\r\n        if (sizes === 'any') {\r\n            return favicon;\r\n        }\r\n        // Otherwise we will try to find the maximum size\r\n        const size = parseInt(sizes.split('x')[0], 10);\r\n        if (Number.isNaN(size)) {\r\n            if (!bestFavicon) {\r\n                bestFavicon = favicon;\r\n                bestSize = 0;\r\n            }\r\n            continue;\r\n        }\r\n        if (size > bestSize) {\r\n            bestFavicon = favicon;\r\n            bestSize = size;\r\n            continue;\r\n        }\r\n    }\r\n    return bestFavicon;\r\n};\r\n// References to the favicons that we need to track in order to reset and update the counters\r\nconst current$1 = {\r\n    favicons: null,\r\n    bestFavicon: null,\r\n    bestFaviconImage: null,\r\n    value: DefaultValue,\r\n    options: DefaultOptions,\r\n};\r\n// Get size depending on screen density\r\nconst devicePixelRatioListener = window.matchMedia('screen and (min-resolution: 2dppx)');\r\nconst getRatio = () => {\r\n    return Math.ceil(window.devicePixelRatio) || 1;\r\n};\r\nconst handleRatioChange = () => {\r\n    set$1(current$1.value, current$1.options);\r\n};\r\nconst getIconSize = () => {\r\n    return 16 * getRatio();\r\n};\r\n// Update favicon\r\nconst setFavicon = (url) => {\r\n    if (!url) {\r\n        return;\r\n    }\r\n    // Remove previous favicons\r\n    for (const favicon of getFavicons()) {\r\n        if (favicon.parentNode) {\r\n            favicon.parentNode.removeChild(favicon);\r\n        }\r\n    }\r\n    // Create new favicon\r\n    const newFavicon = document.createElement('link');\r\n    newFavicon.id = 'badgin';\r\n    newFavicon.type = 'image/x-icon';\r\n    newFavicon.rel = 'icon favicon';\r\n    newFavicon.href = url;\r\n    document.getElementsByTagName('head')[0].appendChild(newFavicon);\r\n};\r\n// Draw the favicon\r\nconst drawFavicon = (image, value, options) => {\r\n    const iconSize = getIconSize();\r\n    const canvas = document.createElement('canvas');\r\n    canvas.width = iconSize;\r\n    canvas.height = iconSize;\r\n    const context = canvas.getContext('2d');\r\n    if (!context) {\r\n        return;\r\n    }\r\n    // Draw new image\r\n    image.width = iconSize;\r\n    image.height = iconSize;\r\n    context.drawImage(image, 0, 0, image.width, image.height);\r\n    // Draw bubble on the top\r\n    drawBubble(context, value, options);\r\n    // Refresh tag in page\r\n    setFavicon(canvas.toDataURL());\r\n};\r\n// Draws the bubble on the canvas\r\nconst drawBubble = (context, value, options) => {\r\n    const ratio = getRatio();\r\n    const iconSize = getIconSize();\r\n    // Do we need to render the bubble at all?\r\n    let finalValue = '';\r\n    if (isPositiveNumber(value)) {\r\n        if (value === 0) {\r\n            finalValue = '';\r\n        }\r\n        else if (value < 100) {\r\n            finalValue = String(value);\r\n        }\r\n        else {\r\n            finalValue = '99+';\r\n        }\r\n    }\r\n    else {\r\n        finalValue = options.indicator;\r\n    }\r\n    // Return early\r\n    if (!finalValue) {\r\n        return;\r\n    }\r\n    // Calculate text width initially\r\n    const textHeight = options.size - 2;\r\n    const font = `${options.size * ratio}px Arial`;\r\n    context.font = font;\r\n    const { width: textWidth } = context.measureText(finalValue);\r\n    context.restore();\r\n    // Calculate position etc.\r\n    const width = textWidth + 2 * options.horizontalPadding;\r\n    const height = textHeight * ratio + 2 * options.verticalPadding;\r\n    const top = iconSize - height - options.verticalMargin;\r\n    const left = iconSize - width - options.horizontalMargin;\r\n    const bottom = 16 * ratio - options.verticalMargin;\r\n    const right = 16 * ratio - options.horizontalMargin;\r\n    const radius = options.radius;\r\n    // Bubble\r\n    context.globalAlpha = 1;\r\n    context.fillStyle = options.backgroundColor;\r\n    context.strokeStyle = options.backgroundColor;\r\n    context.lineWidth = 0;\r\n    context.beginPath();\r\n    context.moveTo(left + radius, top);\r\n    context.quadraticCurveTo(left, top, left, top + radius);\r\n    context.lineTo(left, bottom - radius);\r\n    context.quadraticCurveTo(left, bottom, left + radius, bottom);\r\n    context.lineTo(right - radius, bottom);\r\n    context.quadraticCurveTo(right, bottom, right, bottom - radius);\r\n    context.lineTo(right, top + radius);\r\n    context.quadraticCurveTo(right, top, right - radius, top);\r\n    context.closePath();\r\n    context.fill();\r\n    context.save();\r\n    // Value\r\n    context.font = font;\r\n    context.fillStyle = options.color;\r\n    context.textAlign = 'center';\r\n    context.textBaseline = 'hanging';\r\n    context.fillText(finalValue, left + width / 2, top + options.verticalPadding + (isFirefox ? 1 : 0));\r\n    context.save();\r\n    /*\r\n    // Helper line\r\n    context.restore()\r\n    context.strokeStyle = '#ff0000'\r\n    context.moveTo(0, top + height / 2)\r\n    context.lineTo(iconSize, top + height / 2)\r\n    context.stroke()\r\n    context.save()\r\n    */\r\n};\r\nfunction isAvailable$1() {\r\n    return !!getBestFavicon();\r\n}\r\nfunction set$1(value, options) {\r\n    // Remember options\r\n    current$1.value = value;\r\n    deepMerge(current$1.options, options || {});\r\n    if (!isAvailable$1()) {\r\n        return false;\r\n    }\r\n    // Remember favicons\r\n    if (!current$1.bestFavicon) {\r\n        const bestFavicon = getBestFavicon();\r\n        if (bestFavicon) {\r\n            const bestFaviconImage = document.createElement('img');\r\n            // Allow cross origin resource requests if the image is not a data:uri\r\n            if (!bestFavicon.href.match(/^data/)) {\r\n                bestFaviconImage.crossOrigin = 'anonymous';\r\n            }\r\n            // Load image\r\n            bestFaviconImage.src = bestFavicon.href;\r\n            // Store for next time\r\n            current$1.bestFavicon = bestFavicon;\r\n            current$1.bestFaviconImage = bestFaviconImage;\r\n        }\r\n        // Once the device pixel ratio changes we set the value again\r\n        devicePixelRatioListener.addEventListener('change', handleRatioChange);\r\n    }\r\n    if (!current$1.favicons) {\r\n        current$1.favicons = getFavicons();\r\n    }\r\n    // The image is required for setting the badge\r\n    if (!current$1.bestFaviconImage) {\r\n        return false;\r\n    }\r\n    // If we have the image, we can draw immediately\r\n    if (current$1.bestFaviconImage.complete) {\r\n        drawFavicon(current$1.bestFaviconImage, current$1.value, current$1.options);\r\n        return true;\r\n    }\r\n    // Otherwise we will wait for the load event\r\n    current$1.bestFaviconImage.addEventListener('load', function () {\r\n        drawFavicon(this, current$1.value, current$1.options);\r\n    });\r\n    return true;\r\n}\r\nfunction clear$1() {\r\n    if (!isAvailable$1()) {\r\n        return;\r\n    }\r\n    // Reset value and options\r\n    current$1.value = DefaultValue;\r\n    current$1.options = DefaultOptions;\r\n    // Remove old listener\r\n    devicePixelRatioListener.removeEventListener('change', handleRatioChange);\r\n    if (current$1.favicons) {\r\n        // Remove current favicons\r\n        for (const favicon of getFavicons()) {\r\n            if (favicon.parentNode) {\r\n                favicon.parentNode.removeChild(favicon);\r\n            }\r\n        }\r\n        // Recreate old favicons\r\n        for (const favicon of current$1.favicons) {\r\n            document.head.appendChild(favicon);\r\n        }\r\n        current$1.favicons = null;\r\n        current$1.bestFavicon = null;\r\n        current$1.bestFaviconImage = null;\r\n    }\r\n}\n\nconst defaultOptions = {\r\n    indicator: '!',\r\n};\r\nconst current$2 = {\r\n    title: null,\r\n    value: 0,\r\n    options: defaultOptions,\r\n};\r\nfunction changeTitle(title, value, options) {\r\n    let newTitle = title;\r\n    if (isPositiveNumber(value)) {\r\n        if (value === 0) {\r\n            newTitle = title;\r\n        }\r\n        else {\r\n            newTitle = `(${value}) ${title}`;\r\n        }\r\n    }\r\n    else {\r\n        newTitle = `(${options.indicator}) ${title}`;\r\n    }\r\n    const element = document.querySelector('title');\r\n    if (element) {\r\n        element.childNodes[0].nodeValue = newTitle;\r\n    }\r\n}\r\nfunction set$2(value, options) {\r\n    if (current$2.title === null) {\r\n        current$2.title = document.title;\r\n        // Watch changes of title\r\n        Object.defineProperty(document, 'title', {\r\n            get: () => {\r\n                return current$2.title;\r\n            },\r\n            set: title => {\r\n                current$2.title = title;\r\n                changeTitle(current$2.title, current$2.value, current$2.options);\r\n            },\r\n        });\r\n    }\r\n    // Remember value and options\r\n    current$2.value = value;\r\n    deepMerge(current$2.options, options || {});\r\n    // Trigger change\r\n    document.title = document.title;\r\n    return true;\r\n}\r\nfunction clear$2() {\r\n    current$2.value = 0;\r\n    // Trigger change\r\n    document.title = document.title;\r\n}\n\n/**\r\n * Sets badge\r\n */\r\nfunction set$3(value, options = {}) {\r\n    switch (options.method) {\r\n        case undefined:\r\n        case 'Badging': {\r\n            if (set(value)) {\r\n                // Break only if method is explicitly requested\r\n                if (options.method === 'Badging') {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        case 'Favicon': {\r\n            if (set$1(value, options.favicon)) {\r\n                break;\r\n            }\r\n        }\r\n        default: {\r\n            set$2(value, options.title);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Clears badge\r\n */\r\nfunction clear$3() {\r\n    clear();\r\n    clear$1();\r\n    clear$2();\r\n}\n\nexport { clear$3 as clear, set$3 as set };\n"]},"metadata":{},"sourceType":"script"}