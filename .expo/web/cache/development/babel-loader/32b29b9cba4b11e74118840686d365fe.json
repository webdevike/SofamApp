{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LoginScreen = void 0;\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\n\nvar _taggedTemplateLiteralLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/taggedTemplateLiteralLoose\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _mobxReactLite = require(\"mobx-react-lite\");\n\nvar _reactNative = require(\"react-native\");\n\nvar _components = require(\"../../components\");\n\nvar _theme = require(\"../../theme\");\n\nvar _client = require(\"@apollo/client\");\n\nvar _storage = require(\"../../utils/storage\");\n\nvar _cache = require(\"../../cache\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/app/screens/login-screen/login-screen.tsx\";\n\nfunction _templateObject2() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  {\\n    isLoggedIn @client\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = (0, _taggedTemplateLiteralLoose2.default)([\"\\n  mutation Login($email: String!, $password: String!) {\\n    login(email: $email, password: $password)\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar patternBg = require(\"./pattern.png\");\n\nvar TEXT = {\n  color: _theme.color.palette.white,\n  fontFamily: _theme.typography.primary\n};\nvar TEXT_CONTAINER = {\n  marginBottom: _theme.spacing[8]\n};\n\nvar HEADING = _objectSpread(_objectSpread({}, TEXT), {}, {\n  fontSize: 32,\n  fontWeight: \"700\",\n  textAlign: \"center\",\n  marginBottom: _theme.spacing[2]\n});\n\nvar CAPTION = _objectSpread(_objectSpread({}, TEXT), {}, {\n  fontSize: 20,\n  textAlign: \"center\"\n});\n\nvar BOLD = {\n  fontWeight: \"bold\"\n};\nvar FULL = {\n  flex: 1,\n  alignItems: \"stretch\",\n  justifyContent: \"center\",\n  backgroundColor: \"#1F1944\"\n};\nvar BACKGROUND_IMAGE = {\n  flex: 1,\n  resizeMode: \"cover\",\n  justifyContent: \"center\"\n};\nvar CONTAINER = {\n  margin: _theme.spacing[5]\n};\n\nvar TEXT_INPUT = _objectSpread({\n  paddingVertical: _theme.spacing[4],\n  paddingHorizontal: _theme.spacing[4],\n  marginBottom: _theme.spacing[5],\n  backgroundColor: \"#413D48\",\n  borderRadius: 50\n}, TEXT);\n\nvar LOGIN_BUTTON = {\n  paddingVertical: _theme.spacing[4],\n  paddingHorizontal: _theme.spacing[4],\n  backgroundColor: \"#E14C9F\",\n  borderRadius: 50\n};\n\nvar LOGIN_BUTTON_TEXT = _objectSpread(_objectSpread(_objectSpread({}, TEXT), BOLD), {}, {\n  fontSize: 14,\n  letterSpacing: 2\n});\n\nvar LOGIN = (0, _client.gql)(_templateObject());\nvar IS_LOGGED_IN = (0, _client.gql)(_templateObject2());\nvar LoginScreen = (0, _mobxReactLite.observer)(function LoginScreen() {\n  var _useMutation = (0, _client.useMutation)(LOGIN),\n      _useMutation2 = (0, _slicedToArray2.default)(_useMutation, 1),\n      login = _useMutation2[0];\n\n  var _useState = (0, _react.useState)(\"\"),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = (0, _react.useState)(\"\"),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  return _react.default.createElement(_reactNative.View, {\n    style: FULL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(_reactNative.ImageBackground, {\n    style: BACKGROUND_IMAGE,\n    source: patternBg,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: CONTAINER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, _react.default.createElement(_reactNative.View, {\n    style: TEXT_CONTAINER,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, _react.default.createElement(_components.Text, {\n    style: HEADING,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Welcome To Sofam\"), _react.default.createElement(_components.Text, {\n    style: CAPTION,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"The only social media for families\")), _react.default.createElement(_reactNative.TextInput, {\n    placeholderTextColor: \"#BDBDBD\",\n    style: TEXT_INPUT,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    value: email,\n    placeholder: \"Email\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_reactNative.TextInput, {\n    placeholderTextColor: \"#BDBDBD\",\n    style: TEXT_INPUT,\n    onChangeText: function onChangeText(text) {\n      return setPassword(text);\n    },\n    value: password,\n    placeholder: \"Password\",\n    autoCapitalize: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }), _react.default.createElement(_components.Button, {\n    style: LOGIN_BUTTON,\n    textStyle: LOGIN_BUTTON_TEXT,\n    text: \"Login\",\n    onPress: function _callee() {\n      var _await$login, data;\n\n      return _regenerator.default.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regenerator.default.awrap(login({\n                variables: {\n                  email: email,\n                  password: password\n                }\n              }));\n\n            case 2:\n              _await$login = _context.sent;\n              data = _await$login.data;\n              (0, _storage.saveString)(\"@authToken\", data.login);\n\n              _cache.cache.writeQuery({\n                query: IS_LOGGED_IN,\n                data: {\n                  isLoggedIn: Boolean((0, _storage.loadString)(\"@authToken\"))\n                }\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }))));\n});\nexports.LoginScreen = LoginScreen;","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/screens/login-screen/login-screen.tsx"],"names":["patternBg","require","TEXT","color","palette","white","fontFamily","typography","primary","TEXT_CONTAINER","marginBottom","spacing","HEADING","fontSize","fontWeight","textAlign","CAPTION","BOLD","FULL","flex","alignItems","justifyContent","backgroundColor","BACKGROUND_IMAGE","resizeMode","CONTAINER","margin","TEXT_INPUT","paddingVertical","paddingHorizontal","borderRadius","LOGIN_BUTTON","LOGIN_BUTTON_TEXT","letterSpacing","LOGIN","gql","IS_LOGGED_IN","LoginScreen","login","email","setEmail","password","setPassword","text","variables","data","cache","writeQuery","query","isLoggedIn","Boolean"],"mappings":"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","sourcesContent":["import React, { FunctionComponent as Component, useState, useEffect } from \"react\"\nimport { observer } from \"mobx-react-lite\"\nimport { ViewStyle, View, TextInput, ImageStyle, TextStyle, ImageBackground } from \"react-native\"\nimport { Button, Text } from \"../../components\"\nimport { color, spacing, typography } from \"../../theme\"\nimport { gql, useMutation } from \"@apollo/client\"\nimport { saveString, loadString } from \"../../utils/storage\"\nimport { cache } from '../../cache'\nconst patternBg = require(\"./pattern.png\")\n\n// Styles\nconst TEXT: TextStyle = {\n  color: color.palette.white,\n  fontFamily: typography.primary,\n}\n\nconst TEXT_CONTAINER: ViewStyle = {\n  marginBottom: spacing[8]\n}\n\nconst HEADING: TextStyle = {\n  ...TEXT,\n  fontSize: 32,\n  fontWeight: \"700\",\n  textAlign: \"center\",\n  marginBottom: spacing[2],\n}\n\nconst CAPTION: TextStyle = {\n  ...TEXT,\n  fontSize: 20,\n  textAlign: \"center\"\n}\n\nconst BOLD: TextStyle = { fontWeight: \"bold\" }\n\nconst FULL: ViewStyle = {\n  flex: 1,\n  alignItems: \"stretch\",\n  justifyContent: \"center\",\n  backgroundColor: \"#1F1944\",\n}\n\nconst BACKGROUND_IMAGE: ImageStyle = {\n  flex: 1,\n  resizeMode: \"cover\",\n  justifyContent: \"center\",\n}\n\nconst CONTAINER: ViewStyle = {\n  margin: spacing[5]\n}\n\nconst TEXT_INPUT: ViewStyle = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n  marginBottom: spacing[5],\n  backgroundColor: \"#413D48\",\n  borderRadius: 50,\n  ...TEXT\n}\n\nconst LOGIN_BUTTON: ViewStyle = {\n  paddingVertical: spacing[4],\n  paddingHorizontal: spacing[4],\n  backgroundColor: \"#E14C9F\",\n  borderRadius: 50,\n}\n\nconst LOGIN_BUTTON_TEXT: TextStyle = {\n  ...TEXT,\n  ...BOLD,\n  fontSize: 14,\n  letterSpacing: 2,\n}\n\nconst LOGIN = gql`\n  mutation Login($email: String!, $password: String!) {\n    login(email: $email, password: $password)\n  }\n`\n\nconst IS_LOGGED_IN = gql`\n  {\n    isLoggedIn @client\n  }\n`\n\nexport const LoginScreen: Component = observer(function LoginScreen() {\n  const [login] = useMutation(LOGIN)\n\n  const [email, setEmail] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  return (\n    <View style={FULL}>\n      <ImageBackground style={BACKGROUND_IMAGE} source={patternBg}>\n        <View style={CONTAINER}>\n          <View style={TEXT_CONTAINER}>\n            <Text style={HEADING}>Welcome To Sofam</Text>\n            <Text style={CAPTION}>The only social media for families</Text>\n          </View>\n          <TextInput\n            placeholderTextColor=\"#BDBDBD\"\n            style={TEXT_INPUT}\n            onChangeText={text => setEmail(text)}\n            value={email}\n            placeholder=\"Email\"\n            autoCapitalize=\"none\"\n          />\n          <TextInput\n            placeholderTextColor=\"#BDBDBD\"\n            style={TEXT_INPUT}\n            onChangeText={text => setPassword(text)}\n            value={password}\n            placeholder=\"Password\"\n            autoCapitalize=\"none\"\n          />\n          <Button\n            style={LOGIN_BUTTON}\n            textStyle={LOGIN_BUTTON_TEXT}\n            text=\"Login\"\n            onPress={async () => {\n              const { data }: any = await login({\n                variables: {\n                  email: email,\n                  password: password,\n                },\n              })\n              saveString(\"@authToken\", data.login)\n              cache.writeQuery({\n                query: IS_LOGGED_IN,\n                data: {\n                  isLoggedIn: Boolean(loadString(\"@authToken\")),\n                },\n              })\n            }}\n          />\n        </View>\n      </ImageBackground>\n    </View>\n  )\n})\n"]},"metadata":{},"sourceType":"script"}