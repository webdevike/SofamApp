{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RootNavigator = void 0;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _native = require(\"@react-navigation/native\");\n\nvar _stack = require(\"@react-navigation/stack\");\n\nvar _primaryNavigator = require(\"./primary-navigator\");\n\nvar _authNavigator = require(\"./auth-navigator\");\n\nvar _client = require(\"@apollo/client\");\n\nvar _screens = require(\"../screens\");\n\nvar _cache = require(\"../cache\");\n\nvar _theme = require(\"../theme\");\n\nvar _jsxFileName = \"/Users/isaacweber/code/SofamApp/app/navigation/root-navigator.tsx\";\nvar Stack = (0, _stack.createStackNavigator)();\n\nvar RootStack = function RootStack() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: true,\n      gestureEnabled: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"primaryStack\",\n    component: _primaryNavigator.PrimaryNavigator,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"story\",\n    component: _screens.StoryScreen,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"add-memory\",\n    component: _screens.AddMemoryScreen,\n    options: {\n      headerStyle: {\n        backgroundColor: _theme.color.palette.black\n      },\n      headerTitle: \"\",\n      headerBackTitleVisible: false,\n      headerTintColor: _theme.color.palette.white\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"add-story\",\n    component: _screens.AddStoryScreen,\n    options: {\n      headerStyle: {\n        backgroundColor: _theme.color.palette.black\n      },\n      headerTitle: \"\",\n      headerBackTitleVisible: false,\n      headerTintColor: _theme.color.palette.white\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), _react.default.createElement(Stack.Screen, {\n    name: \"login\",\n    component: _screens.LoginScreen,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AuthStack = function AuthStack() {\n  return _react.default.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false,\n      gestureEnabled: true\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, _react.default.createElement(Stack.Screen, {\n    name: \"authStack\",\n    component: _authNavigator.AuthNavigator,\n    options: {\n      headerShown: false\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar RootNavigator = _react.default.forwardRef(function (props, ref) {\n  var loggedIn = (0, _client.useReactiveVar)(_cache.accessTokenVar);\n  return _react.default.createElement(_native.NavigationContainer, (0, _extends2.default)({}, props, {\n    ref: ref,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), loggedIn ? _react.default.createElement(RootStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 19\n    }\n  }) : _react.default.createElement(AuthStack, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 35\n    }\n  }));\n});\n\nexports.RootNavigator = RootNavigator;\nRootNavigator.displayName = \"RootNavigator\";","map":{"version":3,"sources":["/Users/isaacweber/code/SofamApp/app/navigation/root-navigator.tsx"],"names":["Stack","RootStack","headerShown","gestureEnabled","PrimaryNavigator","StoryScreen","AddMemoryScreen","headerStyle","backgroundColor","color","palette","black","headerTitle","headerBackTitleVisible","headerTintColor","white","AddStoryScreen","LoginScreen","AuthStack","AuthNavigator","RootNavigator","React","forwardRef","props","ref","loggedIn","accessTokenVar","displayName"],"mappings":";;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;AAOA,IAAMA,KAAK,GAAG,kCAAd;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SACE,6BAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbC,MAAAA,WAAW,EAAE,IADA;AAEbC,MAAAA,cAAc,EAAE;AAFH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,cADP;AAEE,IAAA,SAAS,EAAEC,kCAFb;AAGE,IAAA,OAAO,EAAE;AACPF,MAAAA,WAAW,EAAE;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAaE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEG,oBAFb;AAGE,IAAA,OAAO,EAAE;AACPH,MAAAA,WAAW,EAAE;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,EAoBE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,SAAS,EAAEI,wBAFb;AAGE,IAAA,OAAO,EAAE;AACPC,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAEC,aAAMC,OAAN,CAAcC;AADpB,OADN;AAIPC,MAAAA,WAAW,EAAE,EAJN;AAKPC,MAAAA,sBAAsB,EAAE,KALjB;AAMPC,MAAAA,eAAe,EAAEL,aAAMC,OAAN,CAAcK;AANxB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBF,EAgCE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEC,uBAFb;AAGE,IAAA,OAAO,EAAE;AACPT,MAAAA,WAAW,EAAE;AACXC,QAAAA,eAAe,EAAEC,aAAMC,OAAN,CAAcC;AADpB,OADN;AAIPC,MAAAA,WAAW,EAAE,EAJN;AAKPC,MAAAA,sBAAsB,EAAE,KALjB;AAMPC,MAAAA,eAAe,EAAEL,aAAMC,OAAN,CAAcK;AANxB,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCF,EA4CE,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAEE,oBAFb;AAGE,IAAA,OAAO,EAAE;AACPf,MAAAA,WAAW,EAAE;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA5CF,CADF;AAsDD,CAvDD;;AAyDA,IAAMgB,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB,SACE,6BAAC,KAAD,CAAO,SAAP;AACE,IAAA,aAAa,EAAE;AACbhB,MAAAA,WAAW,EAAE,KADA;AAEbC,MAAAA,cAAc,EAAE;AAFH,KADjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,6BAAC,KAAD,CAAO,MAAP;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,SAAS,EAAEgB,4BAFb;AAGE,IAAA,OAAO,EAAE;AACPjB,MAAAA,WAAW,EAAE;AADN,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAgBD,CAjBD;;AAmBO,IAAMkB,aAAa,GAAGC,eAAMC,UAAN,CAAoG,UAACC,KAAD,EAAQC,GAAR,EAAgB;AAC/I,MAAMC,QAAQ,GAAG,4BAAeC,qBAAf,CAAjB;AACA,SACE,6BAAC,2BAAD,6BAAyBH,KAAzB;AAAgC,IAAA,GAAG,EAAEC,GAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGC,QAAQ,GAAG,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAmB,6BAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD9B,CADF;AAKD,CAP4B,CAAtB;;;AASPL,aAAa,CAACO,WAAd,GAA4B,eAA5B","sourcesContent":["import React from \"react\"\nimport { NavigationContainer, NavigationContainerRef, useNavigation } from \"@react-navigation/native\"\nimport { createStackNavigator } from \"@react-navigation/stack\"\nimport { PrimaryNavigator } from \"./primary-navigator\"\nimport { AuthNavigator } from \"./auth-navigator\"\nimport { useReactiveVar } from \"@apollo/client\"\nimport { AddMemoryScreen, AddStoryScreen, LoginScreen, StoryScreen } from \"../screens\"\nimport { accessTokenVar } from \"../cache\"\nimport { color } from \"../theme\"\n\nexport type RootParamList = {\n  primaryStack: undefined\n  authStack: undefined\n}\n\nconst Stack = createStackNavigator<RootParamList>()\n\nconst RootStack = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: true,\n        gestureEnabled: true,\n      }}\n    >\n      <Stack.Screen\n        name=\"primaryStack\"\n        component={PrimaryNavigator}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"story\"\n        component={StoryScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n      <Stack.Screen\n        name=\"add-memory\"\n        component={AddMemoryScreen}\n        options={{\n          headerStyle: {\n            backgroundColor: color.palette.black,\n          },\n          headerTitle: \"\",\n          headerBackTitleVisible: false,\n          headerTintColor: color.palette.white\n        }}\n      />\n      <Stack.Screen\n        name=\"add-story\"\n        component={AddStoryScreen}\n        options={{\n          headerStyle: {\n            backgroundColor: color.palette.black,\n          },\n          headerTitle: \"\",\n          headerBackTitleVisible: false,\n          headerTintColor: color.palette.white\n        }}\n      />\n      <Stack.Screen\n        name=\"login\"\n        component={LoginScreen}\n        options={{\n          headerShown: false,\n        }}\n      />\n    </Stack.Navigator>\n  )\n}\n\nconst AuthStack = () => {\n  return (\n    <Stack.Navigator\n      screenOptions={{\n        headerShown: false,\n        gestureEnabled: true,\n      }}\n    >\n      <Stack.Screen\n        name=\"authStack\"\n        component={AuthNavigator}\n        options={{\n          headerShown: false,\n        }}\n      />\n    </Stack.Navigator>\n  )\n}\n\nexport const RootNavigator = React.forwardRef<NavigationContainerRef, Partial<React.ComponentProps<typeof NavigationContainer>>>((props, ref) => {\n  const loggedIn = useReactiveVar(accessTokenVar)\n  return (\n    <NavigationContainer {...props} ref={ref}>\n      {loggedIn ? <RootStack /> : <AuthStack />}\n    </NavigationContainer>\n  )\n})\n\nRootNavigator.displayName = \"RootNavigator\"\n"]},"metadata":{},"sourceType":"script"}